script {
    fn main() -> () {
        local ptr { u64, ( () | () | u64 ) } lunch

        entry:
        v0 = const { u64, ( () | () | u64 ) } { u64 undef, ( () | () | u64 ) undef }, !1
        v1 = const u64 1, !1
        v2 = insert_value v0, { u64, ( () | () | u64 ) }, v1, 0, !1
        v3 = get_ptr ptr { u64, ( () | () | u64 ) } lunch, ptr { u64, ( () | () | u64 ) }, 0, !2
        store v2, ptr v3, !2
        v4 = get_ptr ptr { u64, ( () | () | u64 ) } lunch, ptr { u64, ( () | () | u64 ) }, 0, !3
        v5 = call anon_0(v4), !4
        v6 = const { u64, ( () | () | u64 ) } { u64 undef, ( () | () | u64 ) undef }, !5
        v7 = const u64 2, !5
        v8 = insert_value v6, { u64, ( () | () | u64 ) }, v7, 0, !5
        v9 = const u64 3, !6
        v10 = insert_value v8, { u64, ( () | () | u64 ) }, v9, 1, !5
        v11 = call anon_1(v10), !7
        v12 = const unit ()
        ret () v12
    }

    fn anon_0(meal !8: { u64, ( () | () | u64 ) }) -> bool {
        entry:
        v0 = const bool false, !9
        ret bool v0
    }

    fn anon_1(meal !10: { u64, ( () | () | u64 ) }) -> bool {
        entry:
        v0 = const bool false, !11
        ret bool v0
    }
}

!0 = filepath "/path/to/enum.sw"
!1 = span !0 9 71
!2 = span !0 89 115
!3 = span !0 124 129
!4 = span !0 162 203
!5 = span !0 9 71
!6 = span !0 154 155
!7 = span !0 162 203
!8 = span !0 169 173
!9 = span !0 196 201
!10 = span !0 169 173
!11 = span !0 196 201
