contract {
    fn set_s<e63a9733>(s: string<40>) -> () {
        local mut ptr b256 key_for_0
        local mut ptr [b256; 2] val_for_0

        entry:
        v0 = get_ptr mut ptr b256 key_for_0, ptr b256, 0
        v1 = const b256 0xf383b0ce51358be57daa3b725fe44acdb2d880604e367199080b4379c41bb6ed
        store v1, ptr v0
        v2 = get_ptr mut ptr [b256; 2] val_for_0, ptr string<40>, 0
        store s, ptr v2
        v3 = get_ptr mut ptr [b256; 2] val_for_0, ptr b256, 0
        state_store_quad_word ptr v3, key ptr v0
        v4 = get_ptr mut ptr b256 key_for_0, ptr b256, 0
        v5 = const b256 0xf383b0ce51358be57daa3b725fe44acdb2d880604e367199080b4379c41bb6ee
        store v5, ptr v4
        v6 = get_ptr mut ptr [b256; 2] val_for_0, ptr b256, 1
        state_store_quad_word ptr v6, key ptr v4
        v7 = const unit ()
        ret () v7
    }

    fn get_s<b8c27db9>() -> string<40> {
        local mut ptr b256 key_for_0
        local mut ptr [b256; 2] val_for_0

        entry:
        v0 = get_ptr mut ptr b256 key_for_0, ptr b256, 0
        v1 = const b256 0xf383b0ce51358be57daa3b725fe44acdb2d880604e367199080b4379c41bb6ed
        store v1, ptr v0
        v2 = get_ptr mut ptr [b256; 2] val_for_0, ptr string<40>, 0
        v3 = get_ptr mut ptr [b256; 2] val_for_0, ptr b256, 0
        state_load_quad_word ptr v3, key ptr v0
        v4 = get_ptr mut ptr b256 key_for_0, ptr b256, 0
        v5 = const b256 0xf383b0ce51358be57daa3b725fe44acdb2d880604e367199080b4379c41bb6ee
        store v5, ptr v4
        v6 = get_ptr mut ptr [b256; 2] val_for_0, ptr b256, 1
        state_load_quad_word ptr v6, key ptr v4
        ret string<40> v2
    }
}
