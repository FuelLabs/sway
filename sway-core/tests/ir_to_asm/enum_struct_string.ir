// Copied from the sway_to_ir test of the same name.

script {
    fn main() -> u64 {
        local ptr { { string<17>, u64 }, u64, bool } b

        entry:
        v0 = const { u64, ( { { string<17>, u64 }, u64, bool } ) } { u64 undef, ( { { string<17>, u64 }, u64, bool } ) undef }
        v1 = const u64 0
        v2 = insert_value v0, { u64, ( { { string<17>, u64 }, u64, bool } ) }, v1, 0
        v3 = const { string<17>, u64 } { string<17> undef, u64 undef }
        v4 = const string<17> "\xee\x82\xb0 an odd length"
        v5 = insert_value v3, { string<17>, u64 }, v4, 0
        v6 = const u64 20
        v7 = insert_value v5, { string<17>, u64 }, v6, 1
        v8 = const { { string<17>, u64 }, u64, bool } { { string<17>, u64 } { string<17> undef, u64 undef }, u64 undef, bool undef }
        v9 = insert_value v8, { { string<17>, u64 }, u64, bool }, v7, 0
        v10 = const u64 10
        v11 = insert_value v9, { { string<17>, u64 }, u64, bool }, v10, 1
        v12 = const bool false
        v13 = insert_value v11, { { string<17>, u64 }, u64, bool }, v12, 2
        v14 = insert_value v2, { u64, ( { { string<17>, u64 }, u64, bool } ) }, v13, 1
        v15 = extract_value v14, { u64, ( { { string<17>, u64 }, u64, bool } ) }, 0
        v16 = const u64 0
        v17 = cmp eq v15 v16
        cbr v17, block0, block1

        block0:
        v18 = extract_value v14, { u64, ( { { string<17>, u64 }, u64, bool } ) }, 1, 0
        v19 = get_ptr ptr { { string<17>, u64 }, u64, bool } b, ptr { { string<17>, u64 }, u64, bool }, 0
        store v18, ptr v19
        v20 = get_ptr ptr { { string<17>, u64 }, u64, bool } b, ptr { { string<17>, u64 }, u64, bool }, 0
        v21 = extract_value v20, { { string<17>, u64 }, u64, bool }, 1
        br block2

        block1:
        v22 = const u64 0
        br block2

        block2:
        v23 = phi(block0: v21, block1: v22)
        ret u64 v23
    }
}
