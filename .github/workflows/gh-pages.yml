name: github pages

on:
  push:
    branches:
      - master
      - bing/forc-reference
    tags:
      - v*

jobs:
  deploy:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        doc_type: ['book', 'reference', 'forc']
    steps:
      - uses: actions/checkout@v2

      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Forc
        if: ${{ matrix.doc_type == 'forc' }}
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --path ./forc

      - name: Install Forc plugins
        if: ${{ matrix.doc_type == 'forc' }}
        run: |
          cargo install --debug --path ./forc-plugins/forc-fmt 
          cargo install --debug --path ./forc-plugins/forc-lsp 
          cargo install --debug --path ./forc-plugins/forc-client
          cargo install --debug forc-explore

      - name: Install mdbook-forc-documenter
        if: ${{ matrix.doc_type == 'forc' }}
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --path ./scripts/mdbook-forc-documenter

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: "0.4.15"

      - name: Build ${{ matrix.doc_type }}
        run: |
          if ${{ matrix.doc_type == 'forc' }}; then
            MDBOOK_preprocessor__FORC_documenter__STRICT="true" mdbook build docs/${{ matrix.doc_type }}
          else
            mdbook build docs/${{ matrix.doc_type }}
          fi

      - name: Deploy master ${{ matrix.doc_type }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/book/${{ matrix.doc_type }}
          destination_dir: master/${{ matrix.doc_type }}
        if: github.ref == 'refs/heads/master'


      - name: Get tag
        id: branch_name
        run: |
          echo ::set-output name=BRANCH_NAME::${GITHUB_REF#refs/tags/}
        if: startsWith(github.ref, 'refs/tags')

      - name: Create latest HTML redirect file
        if: startsWith(github.ref, 'refs/tags')
        run: |
          mkdir ./latest
          cat > ./latest/index.html <<EOF
          <!DOCTYPE html>
          <meta charset="utf-8">
          <meta http-equiv="refresh" content="0; URL=../${{ steps.branch_name.outputs.BRANCH_NAME }}/book">
          <link rel="canonical" href="../${{ steps.branch_name.outputs.BRANCH_NAME }}/book">
          EOF

      - name: Create master book redirect file
        run: |
          mkdir ./tmp
          cat > ./tmp/index.html <<EOF
          <!DOCTYPE html>
          <meta charset="utf-8">
          <meta http-equiv="refresh" content="0; URL=../master/book">
          <link rel="canonical" href="../master/book">
          EOF
        if: github.ref == 'refs/heads/master'

      - name: Deploy index.html redirect file to master
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./tmp
          destination_dir: ./master
          keep_files: true
        if: github.ref == 'refs/heads/master'

      - name: Deploy ${{ matrix.doc_type }} tag
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/${{ matrix.doc_type }}/book
          destination_dir: ${{ steps.branch_name.outputs.BRANCH_NAME }}/${{ matrix.type }}
        if: startsWith(github.ref, 'refs/tags')

      - name: Deploy index.html redirect file to tag
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./latest
          destination_dir: ./${{ steps.branch_name.outputs.BRANCH_NAME }}
          keep_files: true
        if: startsWith(github.ref, 'refs/tags')

      - name: Set latest to point to tag
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./latest/
          destination_dir: ./latest/
        if: startsWith(github.ref, 'refs/tags')
