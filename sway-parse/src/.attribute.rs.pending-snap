{"run_id":"1744846488-344307399","line":456,"new":{"module_name":"sway_parse__attribute__tests","snapshot_name":"parse_attribute","metadata":{"source":"sway-parse/src/attribute.rs","assertion_line":456,"expression":"parse::<Attribute>(r#\"\n            name(arg1, arg2 = \"value\", arg3)\n        \"#,)"},"snapshot":"Attribute(\n  name: BaseIdent(\n    name_override_opt: None,\n    span: Span(\n      src: Source(\n        text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n        line_starts: [\n          0,\n          1,\n          46,\n        ],\n      ),\n      start: 13,\n      end: 17,\n      source_id: None,\n    ),\n    is_raw_ident: false,\n  ),\n  args: Some(Parens(\n    inner: Punctuated(\n      value_separator_pairs: [\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: Source(\n                text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n                line_starts: [\n                  0,\n                  1,\n                  46,\n                ],\n              ),\n              start: 18,\n              end: 22,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: None,\n        ), CommaToken(\n          span: Span(\n            src: Source(\n              text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              line_starts: [\n                0,\n                1,\n                46,\n              ],\n            ),\n            start: 22,\n            end: 23,\n            source_id: None,\n          ),\n        )),\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: Source(\n                text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n                line_starts: [\n                  0,\n                  1,\n                  46,\n                ],\n              ),\n              start: 24,\n              end: 28,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: Some(String(LitString(\n            span: Span(\n              src: Source(\n                text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n                line_starts: [\n                  0,\n                  1,\n                  46,\n                ],\n              ),\n              start: 31,\n              end: 38,\n              source_id: None,\n            ),\n            parsed: \"value\",\n          ))),\n        ), CommaToken(\n          span: Span(\n            src: Source(\n              text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              line_starts: [\n                0,\n                1,\n                46,\n              ],\n            ),\n            start: 38,\n            end: 39,\n            source_id: None,\n          ),\n        )),\n      ],\n      final_value_opt: Some(AttributeArg(\n        name: BaseIdent(\n          name_override_opt: None,\n          span: Span(\n            src: Source(\n              text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              line_starts: [\n                0,\n                1,\n                46,\n              ],\n            ),\n            start: 40,\n            end: 44,\n            source_id: None,\n          ),\n          is_raw_ident: false,\n        ),\n        value: None,\n      )),\n    ),\n    span: Span(\n      src: Source(\n        text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n        line_starts: [\n          0,\n          1,\n          46,\n        ],\n      ),\n      start: 17,\n      end: 45,\n      source_id: None,\n    ),\n  )),\n)"},"old":{"module_name":"sway_parse__attribute__tests","metadata":{},"snapshot":"Attribute(\n  name: BaseIdent(\n    name_override_opt: None,\n    span: Span(\n      src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n      start: 13,\n      end: 17,\n      source_id: None,\n    ),\n    is_raw_ident: false,\n  ),\n  args: Some(Parens(\n    inner: Punctuated(\n      value_separator_pairs: [\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              start: 18,\n              end: 22,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: None,\n        ), CommaToken(\n          span: Span(\n            src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            start: 22,\n            end: 23,\n            source_id: None,\n          ),\n        )),\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              start: 24,\n              end: 28,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: Some(String(LitString(\n            span: Span(\n              src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              start: 31,\n              end: 38,\n              source_id: None,\n            ),\n            parsed: \"value\",\n          ))),\n        ), CommaToken(\n          span: Span(\n            src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            start: 38,\n            end: 39,\n            source_id: None,\n          ),\n        )),\n      ],\n      final_value_opt: Some(AttributeArg(\n        name: BaseIdent(\n          name_override_opt: None,\n          span: Span(\n            src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            start: 40,\n            end: 44,\n            source_id: None,\n          ),\n          is_raw_ident: false,\n        ),\n        value: None,\n      )),\n    ),\n    span: Span(\n      src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n      start: 17,\n      end: 45,\n      source_id: None,\n    ),\n  )),\n)"}}
{"run_id":"1744846488-344307399","line":203,"new":{"module_name":"sway_parse__attribute__tests","snapshot_name":"parse_annotated_fn","metadata":{"source":"sway-parse/src/attribute.rs","assertion_line":203,"expression":"parse::<Annotated<ItemFn>>(r#\"\n            // I will be ignored.\n            //! This is a misplaced inner doc comment.\n            /// This is an outer doc comment.\n            #[storage(read)]\n            fn main() {\n                ()\n            }\n        \"#,)"},"snapshot":"Annotated(\n  attributes: [\n    AttributeDecl(\n      hash_kind: Inner(HashBangToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                  line_starts: [\n                    0,\n                    1,\n                    35,\n                    90,\n                    136,\n                    165,\n                    189,\n                    208,\n                    222,\n                  ],\n                ),\n                start: 47,\n                end: 89,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: Source(\n                        text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                        line_starts: [\n                          0,\n                          1,\n                          35,\n                          90,\n                          136,\n                          165,\n                          189,\n                          208,\n                          222,\n                        ],\n                      ),\n                      start: 50,\n                      end: 89,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                  line_starts: [\n                    0,\n                    1,\n                    35,\n                    90,\n                    136,\n                    165,\n                    189,\n                    208,\n                    222,\n                  ],\n                ),\n                start: 50,\n                end: 89,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                  line_starts: [\n                    0,\n                    1,\n                    35,\n                    90,\n                    136,\n                    165,\n                    189,\n                    208,\n                    222,\n                  ],\n                ),\n                start: 102,\n                end: 135,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: Source(\n                        text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                        line_starts: [\n                          0,\n                          1,\n                          35,\n                          90,\n                          136,\n                          165,\n                          189,\n                          208,\n                          222,\n                        ],\n                      ),\n                      start: 105,\n                      end: 135,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                  line_starts: [\n                    0,\n                    1,\n                    35,\n                    90,\n                    136,\n                    165,\n                    189,\n                    208,\n                    222,\n                  ],\n                ),\n                start: 105,\n                end: 135,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 148,\n          end: 149,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: None,\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                  line_starts: [\n                    0,\n                    1,\n                    35,\n                    90,\n                    136,\n                    165,\n                    189,\n                    208,\n                    222,\n                  ],\n                ),\n                start: 150,\n                end: 157,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: Source(\n                        text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                        line_starts: [\n                          0,\n                          1,\n                          35,\n                          90,\n                          136,\n                          165,\n                          189,\n                          208,\n                          222,\n                        ],\n                      ),\n                      start: 158,\n                      end: 162,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                  line_starts: [\n                    0,\n                    1,\n                    35,\n                    90,\n                    136,\n                    165,\n                    189,\n                    208,\n                    222,\n                  ],\n                ),\n                start: 157,\n                end: 163,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 149,\n          end: 164,\n          source_id: None,\n        ),\n      ),\n    ),\n  ],\n  value: ItemFn(\n    fn_signature: FnSignature(\n      visibility: None,\n      fn_token: FnToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 177,\n          end: 179,\n          source_id: None,\n        ),\n      ),\n      name: BaseIdent(\n        name_override_opt: None,\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 180,\n          end: 184,\n          source_id: None,\n        ),\n        is_raw_ident: false,\n      ),\n      generics: None,\n      arguments: Parens(\n        inner: Static(Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: None,\n        )),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 184,\n          end: 186,\n          source_id: None,\n        ),\n      ),\n      return_type_opt: None,\n      where_clause_opt: None,\n    ),\n    body: Braces(\n      inner: CodeBlockContents(\n        statements: [],\n        final_expr_opt: Some(Tuple(Parens(\n          inner: Nil,\n          span: Span(\n            src: Source(\n              text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n              line_starts: [\n                0,\n                1,\n                35,\n                90,\n                136,\n                165,\n                189,\n                208,\n                222,\n              ],\n            ),\n            start: 205,\n            end: 207,\n            source_id: None,\n          ),\n        ))),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            line_starts: [\n              0,\n              1,\n              35,\n              90,\n              136,\n              165,\n              189,\n              208,\n              222,\n            ],\n          ),\n          start: 188,\n          end: 220,\n          source_id: None,\n        ),\n      ),\n      span: Span(\n        src: Source(\n          text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          line_starts: [\n            0,\n            1,\n            35,\n            90,\n            136,\n            165,\n            189,\n            208,\n            222,\n          ],\n        ),\n        start: 187,\n        end: 221,\n        source_id: None,\n      ),\n    ),\n  ),\n)"},"old":{"module_name":"sway_parse__attribute__tests","metadata":{},"snapshot":"Annotated(\n  attributes: [\n    AttributeDecl(\n      hash_kind: Inner(HashBangToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 47,\n                end: 89,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      start: 50,\n                      end: 89,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 50,\n                end: 89,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 102,\n                end: 135,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      start: 105,\n                      end: 135,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 105,\n                end: 135,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 148,\n          end: 149,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: None,\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 150,\n                end: 157,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      start: 158,\n                      end: 162,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 157,\n                end: 163,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 149,\n          end: 164,\n          source_id: None,\n        ),\n      ),\n    ),\n  ],\n  value: ItemFn(\n    fn_signature: FnSignature(\n      visibility: None,\n      fn_token: FnToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 177,\n          end: 179,\n          source_id: None,\n        ),\n      ),\n      name: BaseIdent(\n        name_override_opt: None,\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 180,\n          end: 184,\n          source_id: None,\n        ),\n        is_raw_ident: false,\n      ),\n      generics: None,\n      arguments: Parens(\n        inner: Static(Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: None,\n        )),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 184,\n          end: 186,\n          source_id: None,\n        ),\n      ),\n      return_type_opt: None,\n      where_clause_opt: None,\n    ),\n    body: Braces(\n      inner: CodeBlockContents(\n        statements: [],\n        final_expr_opt: Some(Tuple(Parens(\n          inner: Nil,\n          span: Span(\n            src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            start: 205,\n            end: 207,\n            source_id: None,\n          ),\n        ))),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 188,\n          end: 220,\n          source_id: None,\n        ),\n      ),\n      span: Span(\n        src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n        start: 187,\n        end: 221,\n        source_id: None,\n      ),\n    ),\n  ),\n)"}}
{"run_id":"1744847015-110357541","line":456,"new":{"module_name":"sway_parse__attribute__tests","snapshot_name":"parse_attribute","metadata":{"source":"sway-parse/src/attribute.rs","assertion_line":456,"expression":"parse::<Attribute>(r#\"\n            name(arg1, arg2 = \"value\", arg3)\n        \"#,)"},"snapshot":"Attribute(\n  name: BaseIdent(\n    name_override_opt: None,\n    span: Span(\n      src: Source(\n        text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n      ),\n      start: 13,\n      end: 17,\n      source_id: None,\n    ),\n    is_raw_ident: false,\n  ),\n  args: Some(Parens(\n    inner: Punctuated(\n      value_separator_pairs: [\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: Source(\n                text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              ),\n              start: 18,\n              end: 22,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: None,\n        ), CommaToken(\n          span: Span(\n            src: Source(\n              text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            ),\n            start: 22,\n            end: 23,\n            source_id: None,\n          ),\n        )),\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: Source(\n                text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              ),\n              start: 24,\n              end: 28,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: Some(String(LitString(\n            span: Span(\n              src: Source(\n                text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              ),\n              start: 31,\n              end: 38,\n              source_id: None,\n            ),\n            parsed: \"value\",\n          ))),\n        ), CommaToken(\n          span: Span(\n            src: Source(\n              text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            ),\n            start: 38,\n            end: 39,\n            source_id: None,\n          ),\n        )),\n      ],\n      final_value_opt: Some(AttributeArg(\n        name: BaseIdent(\n          name_override_opt: None,\n          span: Span(\n            src: Source(\n              text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            ),\n            start: 40,\n            end: 44,\n            source_id: None,\n          ),\n          is_raw_ident: false,\n        ),\n        value: None,\n      )),\n    ),\n    span: Span(\n      src: Source(\n        text: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n      ),\n      start: 17,\n      end: 45,\n      source_id: None,\n    ),\n  )),\n)"},"old":{"module_name":"sway_parse__attribute__tests","metadata":{},"snapshot":"Attribute(\n  name: BaseIdent(\n    name_override_opt: None,\n    span: Span(\n      src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n      start: 13,\n      end: 17,\n      source_id: None,\n    ),\n    is_raw_ident: false,\n  ),\n  args: Some(Parens(\n    inner: Punctuated(\n      value_separator_pairs: [\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              start: 18,\n              end: 22,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: None,\n        ), CommaToken(\n          span: Span(\n            src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            start: 22,\n            end: 23,\n            source_id: None,\n          ),\n        )),\n        (AttributeArg(\n          name: BaseIdent(\n            name_override_opt: None,\n            span: Span(\n              src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              start: 24,\n              end: 28,\n              source_id: None,\n            ),\n            is_raw_ident: false,\n          ),\n          value: Some(String(LitString(\n            span: Span(\n              src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n              start: 31,\n              end: 38,\n              source_id: None,\n            ),\n            parsed: \"value\",\n          ))),\n        ), CommaToken(\n          span: Span(\n            src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            start: 38,\n            end: 39,\n            source_id: None,\n          ),\n        )),\n      ],\n      final_value_opt: Some(AttributeArg(\n        name: BaseIdent(\n          name_override_opt: None,\n          span: Span(\n            src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n            start: 40,\n            end: 44,\n            source_id: None,\n          ),\n          is_raw_ident: false,\n        ),\n        value: None,\n      )),\n    ),\n    span: Span(\n      src: \"\\n            name(arg1, arg2 = \\\"value\\\", arg3)\\n        \",\n      start: 17,\n      end: 45,\n      source_id: None,\n    ),\n  )),\n)"}}
{"run_id":"1744847015-110357541","line":203,"new":{"module_name":"sway_parse__attribute__tests","snapshot_name":"parse_annotated_fn","metadata":{"source":"sway-parse/src/attribute.rs","assertion_line":203,"expression":"parse::<Annotated<ItemFn>>(r#\"\n            // I will be ignored.\n            //! This is a misplaced inner doc comment.\n            /// This is an outer doc comment.\n            #[storage(read)]\n            fn main() {\n                ()\n            }\n        \"#,)"},"snapshot":"Annotated(\n  attributes: [\n    AttributeDecl(\n      hash_kind: Inner(HashBangToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                ),\n                start: 47,\n                end: 89,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: Source(\n                        text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      ),\n                      start: 50,\n                      end: 89,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                ),\n                start: 50,\n                end: 89,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                ),\n                start: 102,\n                end: 135,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: Source(\n                        text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      ),\n                      start: 105,\n                      end: 135,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                ),\n                start: 105,\n                end: 135,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 148,\n          end: 149,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: None,\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                ),\n                start: 150,\n                end: 157,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: Source(\n                        text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      ),\n                      start: 158,\n                      end: 162,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: Source(\n                  text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                ),\n                start: 157,\n                end: 163,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 149,\n          end: 164,\n          source_id: None,\n        ),\n      ),\n    ),\n  ],\n  value: ItemFn(\n    fn_signature: FnSignature(\n      visibility: None,\n      fn_token: FnToken(\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 177,\n          end: 179,\n          source_id: None,\n        ),\n      ),\n      name: BaseIdent(\n        name_override_opt: None,\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 180,\n          end: 184,\n          source_id: None,\n        ),\n        is_raw_ident: false,\n      ),\n      generics: None,\n      arguments: Parens(\n        inner: Static(Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: None,\n        )),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 184,\n          end: 186,\n          source_id: None,\n        ),\n      ),\n      return_type_opt: None,\n      where_clause_opt: None,\n    ),\n    body: Braces(\n      inner: CodeBlockContents(\n        statements: [],\n        final_expr_opt: Some(Tuple(Parens(\n          inner: Nil,\n          span: Span(\n            src: Source(\n              text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            ),\n            start: 205,\n            end: 207,\n            source_id: None,\n          ),\n        ))),\n        span: Span(\n          src: Source(\n            text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          ),\n          start: 188,\n          end: 220,\n          source_id: None,\n        ),\n      ),\n      span: Span(\n        src: Source(\n          text: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n        ),\n        start: 187,\n        end: 221,\n        source_id: None,\n      ),\n    ),\n  ),\n)"},"old":{"module_name":"sway_parse__attribute__tests","metadata":{},"snapshot":"Annotated(\n  attributes: [\n    AttributeDecl(\n      hash_kind: Inner(HashBangToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 47,\n                end: 89,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      start: 50,\n                      end: 89,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 50,\n                end: 89,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 47,\n          end: 89,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: Some(\"doc-comment\"),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 102,\n                end: 135,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      start: 105,\n                      end: 135,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 105,\n                end: 135,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 102,\n          end: 135,\n          source_id: None,\n        ),\n      ),\n    ),\n    AttributeDecl(\n      hash_kind: Outer(HashToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 148,\n          end: 149,\n          source_id: None,\n        ),\n      )),\n      attribute: SquareBrackets(\n        inner: Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: Some(Attribute(\n            name: BaseIdent(\n              name_override_opt: None,\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 150,\n                end: 157,\n                source_id: None,\n              ),\n              is_raw_ident: false,\n            ),\n            args: Some(Parens(\n              inner: Punctuated(\n                value_separator_pairs: [],\n                final_value_opt: Some(AttributeArg(\n                  name: BaseIdent(\n                    name_override_opt: None,\n                    span: Span(\n                      src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                      start: 158,\n                      end: 162,\n                      source_id: None,\n                    ),\n                    is_raw_ident: false,\n                  ),\n                  value: None,\n                )),\n              ),\n              span: Span(\n                src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n                start: 157,\n                end: 163,\n                source_id: None,\n              ),\n            )),\n          )),\n        ),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 149,\n          end: 164,\n          source_id: None,\n        ),\n      ),\n    ),\n  ],\n  value: ItemFn(\n    fn_signature: FnSignature(\n      visibility: None,\n      fn_token: FnToken(\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 177,\n          end: 179,\n          source_id: None,\n        ),\n      ),\n      name: BaseIdent(\n        name_override_opt: None,\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 180,\n          end: 184,\n          source_id: None,\n        ),\n        is_raw_ident: false,\n      ),\n      generics: None,\n      arguments: Parens(\n        inner: Static(Punctuated(\n          value_separator_pairs: [],\n          final_value_opt: None,\n        )),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 184,\n          end: 186,\n          source_id: None,\n        ),\n      ),\n      return_type_opt: None,\n      where_clause_opt: None,\n    ),\n    body: Braces(\n      inner: CodeBlockContents(\n        statements: [],\n        final_expr_opt: Some(Tuple(Parens(\n          inner: Nil,\n          span: Span(\n            src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n            start: 205,\n            end: 207,\n            source_id: None,\n          ),\n        ))),\n        span: Span(\n          src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n          start: 188,\n          end: 220,\n          source_id: None,\n        ),\n      ),\n      span: Span(\n        src: \"\\n            // I will be ignored.\\n            //! This is a misplaced inner doc comment.\\n            /// This is an outer doc comment.\\n            #[storage(read)]\\n            fn main() {\\n                ()\\n            }\\n        \",\n        start: 187,\n        end: 221,\n        source_id: None,\n      ),\n    ),\n  ),\n)"}}
{"run_id":"1744847830-634123317","line":456,"new":null,"old":null}
{"run_id":"1744847830-634123317","line":203,"new":null,"old":null}
{"run_id":"1744849093-145983963","line":203,"new":null,"old":null}
{"run_id":"1744849093-145983963","line":456,"new":null,"old":null}
