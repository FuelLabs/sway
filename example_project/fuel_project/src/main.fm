script {
    struct RGB {
      red: u64,
      green: u64,
      blue: u64,
    }

	trait Color {
		fn rgb(self) -> RGB;
	}

enum PrimaryColors {
       Red : (),
       Green : (),
       Blue : ()
    }

    impl Color for PrimaryColors {
		// TODO: when we support match statements, change this to a match statement
		fn rgb(self) -> RGB {
			if self == PrimaryColors::Red {
				RGB {
					red: 255,
					blue: 0,
					green: 0,
				}
			}
			else if self == PrimaryColors::Green {
				RGB {
					red: 0,
					blue: 0,
					green: 255,
				}
			}
			else if self == PrimaryColors::Blue {
				RGB {
					red: 0,
					blue: 255,
					green: 0,
				}
			}
			else {
				RGB {
					red: 0,
					blue: 0,
					green: 0
				}
			}
        }
    }

    fn main() {
		let first_color = PrimaryColors::Green;
        let rgb: RGB = first_color.rgb();
    }
}
