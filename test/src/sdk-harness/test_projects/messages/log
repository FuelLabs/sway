;; --- FINAL PROGRAM ---

.program:
ji   i4
noop
DATA_SECTION_OFFSET[0..32]
DATA_SECTION_OFFSET[32..64]
lw   $ds $is 1
add  $$ds $$ds $is
noop                          ; word-alignment of data section
.data:

;; --- FINAL PROGRAM ---

.program:
ji   i4
noop
DATA_SECTION_OFFSET[0..32]
DATA_SECTION_OFFSET[32..64]
lw   $ds $is 1
add  $$ds $$ds $is
noop                          ; word-alignment of data section
.data:

;; --- FINAL PROGRAM ---

.program:
ji   i4
noop
DATA_SECTION_OFFSET[0..32]
DATA_SECTION_OFFSET[32..64]
lw   $ds $is 1
add  $$ds $$ds $is
lw   $r0 $fp i73              ; load input function selector
lw   $r1 data_15              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i42                  ; jump to selected function
lw   $r1 data_16              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i154                 ; jump to selected function
lw   $r1 data_17              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i266                 ; jump to selected function
lw   $r1 data_18              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i378                 ; jump to selected function
lw   $r1 data_19              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i490                 ; jump to selected function
lw   $r1 data_20              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i603                 ; jump to selected function
lw   $r1 data_21              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i716                 ; jump to selected function
lw   $r1 data_22              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i829                 ; jump to selected function
lw   $r1 data_23              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i941                 ; jump to selected function
lw   $r1 data_24              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i1053                ; jump to selected function
lw   $r1 data_25              ; load fn selector for comparison
eq   $r2 $r0 $r1              ; function selector comparison
jnzi $r2 i1165                ; jump to selected function
movi $$tmp i123               ; special code for mismatched selector
rvrt $$tmp                    ; revert if no selectors matched
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
addi $r7 $r0 i32              ; get address for arg msg_data
lw   $r5 $r0 i7               ; get arg coins
move $r3 $sp                  ; save locals base register
cfei i200                     ; allocate 200 bytes for locals
addi $r2 $r3 i152             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i53
ji   i56
addi $r0 $r3 i72              ; get offset reg for get_ptr
sw   $r0 $zero i0             ; insert_value @ 0
ji   i63
eq   $r0 $r1 $one
jnzi $r0 i59
ji   i62
addi $r0 $r3 i88              ; get offset reg for get_ptr
sw   $r0 $one i0              ; insert_value @ 0
ji   i63
rvrt $zero
movi $r1 i8                   ; get length for mcp
mcp  $r2 $r0 $r1              ; copy memory with mem_copy
addi $r0 $r3 i184             ; get offset reg for get_ptr
addi $r0 $r3 i184             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r3 i184             ; get offset reg for get_ptr
addi $r0 $r3 i128             ; get offset reg for get_ptr
addi $r0 $r3 i128             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r3 i128             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i77
ji   i79
gtf  $r6 $zero i8             ; get transaction field
ji   i87
addi $r0 $r3 i128             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i84
ji   i86
gtf  $r6 $zero i23            ; get transaction field
ji   i87
gtf  $r6 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r6              ; asm block
jnzi $r0 i91
ji   i141
addi $r4 $r3 i144             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i96
ji   i99
addi $r1 $r3 i64              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i130
eq   $r0 $r1 $one
jnzi $r0 i102
ji   i105
addi $r1 $r3 i80              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i130
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i109
ji   i113
addi $r1 $r3 i96              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i130
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i117
ji   i121
addi $r1 $r3 i104             ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i130
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i125
ji   i129
addi $r1 $r3 i112             ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i130
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r4 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r3 i192             ; get offset reg for get_ptr
addi $r0 $r3 i192             ; get store offset
mcpi $r0 $r4 i8               ; store value
addi $r0 $r3 i192             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i143
ji   i152
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r3 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
sw   $r1 $zero i4             ; insert_value @ 1
addi $r0 $r1 i40              ; get struct field(s) 2 offset
mcpi $r0 $r7 i24              ; store struct field value
lw   $r0 data_4               ; literal instantiation
smo  $r1 $r0 $r2 $r5
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i88
lw   $r0 $fp i74              ; base register for method parameter
addi $r7 $r0 i0               ; get address for arg recipient
addi $r6 $r0 i32              ; get address for arg msg_data
lw   $r5 $r0 i8               ; get arg coins
move $r4 $sp                  ; save locals base register
cfei i208                     ; allocate 208 bytes for locals
addi $r2 $r4 i160             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i165
ji   i168
addi $r1 $r4 i72              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i175
eq   $r0 $r1 $one
jnzi $r0 i171
ji   i174
addi $r1 $r4 i88              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i175
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r4 i184             ; get offset reg for get_ptr
addi $r0 $r4 i184             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r4 i184             ; get offset reg for get_ptr
addi $r0 $r4 i136             ; get offset reg for get_ptr
addi $r0 $r4 i136             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r4 i136             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i189
ji   i191
gtf  $r3 $zero i8             ; get transaction field
ji   i199
addi $r0 $r4 i136             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i196
ji   i198
gtf  $r3 $zero i23            ; get transaction field
ji   i199
gtf  $r3 $zero i23            ; get transaction field
move $r8 $zero                ; parameter from branch to block argument
lt   $r0 $r8 $r3              ; asm block
jnzi $r0 i203
ji   i253
addi $r2 $r4 i152             ; get offset reg for get_ptr
gtf  $r1 $r8 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i208
ji   i211
addi $r1 $r4 i80              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i242
eq   $r0 $r1 $one
jnzi $r0 i214
ji   i217
addi $r1 $r4 i96              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i242
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i221
ji   i225
addi $r1 $r4 i104             ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i242
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i229
ji   i233
addi $r1 $r4 i112             ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i242
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i237
ji   i241
addi $r1 $r4 i120             ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i242
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r4 i200             ; get offset reg for get_ptr
addi $r0 $r4 i200             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r0 $r4 i200             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i255
ji   i264
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r4 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r7 i32              ; store struct field value
sw   $r1 $one i4              ; insert_value @ 1
addi $r0 $r1 i40              ; get struct field(s) 2 offset
mcpi $r0 $r6 i32              ; store struct field value
lw   $r0 data_5               ; literal instantiation
smo  $r1 $r0 $r8 $r5
ret  $zero                    ; returning unit as zero
add  $r8 $r8 $one
ji   i200
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
lw   $r7 $r0 i4               ; get arg msg_data
lw   $r6 $r0 i5               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i184                     ; allocate 184 bytes for locals
addi $r2 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i277
ji   i280
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i287
eq   $r0 $r1 $one
jnzi $r0 i283
ji   i286
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i287
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i168             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i301
ji   i303
gtf  $r4 $zero i8             ; get transaction field
ji   i311
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i308
ji   i310
gtf  $r4 $zero i23            ; get transaction field
ji   i311
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i315
ji   i365
addi $r3 $r5 i128             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i320
ji   i323
addi $r1 $r5 i48              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i354
eq   $r0 $r1 $one
jnzi $r0 i326
ji   i329
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i354
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i333
ji   i337
addi $r1 $r5 i80              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i354
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i341
ji   i345
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i354
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i349
ji   i353
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i354
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i176             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i367
ji   i376
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
sw   $r1 $r7 i5               ; insert_value @ 2
lw   $r0 data_6               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i312
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
lw   $r7 $r0 i4               ; get arg msg_data
lw   $r6 $r0 i5               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i184                     ; allocate 184 bytes for locals
addi $r2 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i389
ji   i392
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i399
eq   $r0 $r1 $one
jnzi $r0 i395
ji   i398
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i399
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i168             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i413
ji   i415
gtf  $r4 $zero i8             ; get transaction field
ji   i423
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i420
ji   i422
gtf  $r4 $zero i23            ; get transaction field
ji   i423
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i427
ji   i477
addi $r3 $r5 i128             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i432
ji   i435
addi $r1 $r5 i48              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i466
eq   $r0 $r1 $one
jnzi $r0 i438
ji   i441
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i466
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i445
ji   i449
addi $r1 $r5 i80              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i466
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i453
ji   i457
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i466
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i461
ji   i465
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i466
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i176             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i479
ji   i488
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
sw   $r1 $r7 i5               ; insert_value @ 2
lw   $r0 data_6               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i424
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
addi $r7 $r0 i32              ; get address for arg msg_data
lw   $r6 $r0 i9               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i216                     ; allocate 216 bytes for locals
addi $r2 $r5 i168             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i501
ji   i504
addi $r1 $r5 i80              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i511
eq   $r0 $r1 $one
jnzi $r0 i507
ji   i510
addi $r1 $r5 i96              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i511
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i192             ; get offset reg for get_ptr
addi $r0 $r5 i192             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i192             ; get offset reg for get_ptr
addi $r0 $r5 i144             ; get offset reg for get_ptr
addi $r0 $r5 i144             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i144             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i525
ji   i527
gtf  $r4 $zero i8             ; get transaction field
ji   i535
addi $r0 $r5 i144             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i532
ji   i534
gtf  $r4 $zero i23            ; get transaction field
ji   i535
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i539
ji   i589
addi $r3 $r5 i160             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i544
ji   i547
addi $r1 $r5 i88              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i578
eq   $r0 $r1 $one
jnzi $r0 i550
ji   i553
addi $r1 $r5 i104             ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i578
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i557
ji   i561
addi $r1 $r5 i112             ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i578
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i565
ji   i569
addi $r1 $r5 i120             ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i578
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i573
ji   i577
addi $r1 $r5 i128             ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i578
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i208             ; get offset reg for get_ptr
addi $r0 $r5 i208             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i208             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i591
ji   i601
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
addi $r0 $r1 i40              ; get struct field(s) 2 offset
mcpi $r0 $r7 i40              ; store struct field value
lw   $r0 data_7               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i536
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
addi $r7 $r0 i32              ; get address for arg msg_data
lw   $r6 $r0 i5               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i184                     ; allocate 184 bytes for locals
addi $r2 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i614
ji   i617
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i624
eq   $r0 $r1 $one
jnzi $r0 i620
ji   i623
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i624
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i168             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i638
ji   i640
gtf  $r4 $zero i8             ; get transaction field
ji   i648
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i645
ji   i647
gtf  $r4 $zero i23            ; get transaction field
ji   i648
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i652
ji   i702
addi $r3 $r5 i128             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i657
ji   i660
addi $r1 $r5 i48              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i691
eq   $r0 $r1 $one
jnzi $r0 i663
ji   i666
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i691
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i670
ji   i674
addi $r1 $r5 i80              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i691
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i678
ji   i682
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i691
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i686
ji   i690
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i691
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i176             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i704
ji   i714
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_8               ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
addi $r0 $r1 i40              ; get struct field(s) 2 offset
mcpi $r0 $r7 i8               ; store struct field value
lw   $r0 data_6               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i649
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
addi $r7 $r0 i32              ; get address for arg msg_data
lw   $r6 $r0 i6               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i192                     ; allocate 192 bytes for locals
addi $r2 $r5 i144             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i727
ji   i730
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i737
eq   $r0 $r1 $one
jnzi $r0 i733
ji   i736
addi $r1 $r5 i80              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i737
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i120             ; get offset reg for get_ptr
addi $r0 $r5 i120             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i120             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i751
ji   i753
gtf  $r4 $zero i8             ; get transaction field
ji   i761
addi $r0 $r5 i120             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i758
ji   i760
gtf  $r4 $zero i23            ; get transaction field
ji   i761
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i765
ji   i815
addi $r3 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i770
ji   i773
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i804
eq   $r0 $r1 $one
jnzi $r0 i776
ji   i779
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i804
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i783
ji   i787
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i804
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i791
ji   i795
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i804
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i799
ji   i803
addi $r1 $r5 i104             ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i804
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i184             ; get offset reg for get_ptr
addi $r0 $r5 i184             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i184             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i817
ji   i827
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_9               ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
addi $r0 $r1 i40              ; get struct field(s) 2 offset
mcpi $r0 $r7 i16              ; store struct field value
lw   $r0 data_10              ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i762
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
lw   $r7 $r0 i4               ; get arg msg_data
lw   $r6 $r0 i5               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i184                     ; allocate 184 bytes for locals
addi $r2 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i840
ji   i843
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i850
eq   $r0 $r1 $one
jnzi $r0 i846
ji   i849
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i850
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i168             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i864
ji   i866
gtf  $r4 $zero i8             ; get transaction field
ji   i874
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i871
ji   i873
gtf  $r4 $zero i23            ; get transaction field
ji   i874
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i878
ji   i928
addi $r3 $r5 i128             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i883
ji   i886
addi $r1 $r5 i48              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i917
eq   $r0 $r1 $one
jnzi $r0 i889
ji   i892
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i917
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i896
ji   i900
addi $r1 $r5 i80              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i917
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i904
ji   i908
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i917
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i912
ji   i916
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i917
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i176             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i930
ji   i939
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_11              ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
sw   $r1 $r7 i5               ; insert_value @ 2
lw   $r0 data_6               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i875
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
lw   $r7 $r0 i4               ; get arg msg_data
lw   $r6 $r0 i5               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i184                     ; allocate 184 bytes for locals
addi $r2 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i952
ji   i955
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i962
eq   $r0 $r1 $one
jnzi $r0 i958
ji   i961
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i962
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i168             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i976
ji   i978
gtf  $r4 $zero i8             ; get transaction field
ji   i986
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i983
ji   i985
gtf  $r4 $zero i23            ; get transaction field
ji   i986
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i990
ji   i1040
addi $r3 $r5 i128             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i995
ji   i998
addi $r1 $r5 i48              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i1029
eq   $r0 $r1 $one
jnzi $r0 i1001
ji   i1004
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i1029
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1008
ji   i1012
addi $r1 $r5 i80              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1029
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1016
ji   i1020
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1029
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1024
ji   i1028
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1029
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i176             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1042
ji   i1051
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_12              ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
sw   $r1 $r7 i5               ; insert_value @ 2
lw   $r0 data_6               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i987
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
lw   $r7 $r0 i4               ; get arg msg_data
lw   $r6 $r0 i5               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i184                     ; allocate 184 bytes for locals
addi $r2 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i1064
ji   i1067
addi $r1 $r5 i48              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i1074
eq   $r0 $r1 $one
jnzi $r0 i1070
ji   i1073
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i1074
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i160             ; get offset reg for get_ptr
addi $r0 $r5 i160             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i160             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i1088
ji   i1090
gtf  $r4 $zero i8             ; get transaction field
ji   i1098
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i1095
ji   i1097
gtf  $r4 $zero i23            ; get transaction field
ji   i1098
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i1102
ji   i1152
addi $r3 $r5 i128             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i1107
ji   i1110
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i1141
eq   $r0 $r1 $one
jnzi $r0 i1113
ji   i1116
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i1141
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1120
ji   i1124
addi $r1 $r5 i80              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1141
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1128
ji   i1132
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1141
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1136
ji   i1140
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1141
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i176             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1154
ji   i1163
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_13              ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
sw   $r1 $r7 i5               ; insert_value @ 2
lw   $r0 data_6               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i1099
lw   $r0 $fp i74              ; base register for method parameter
addi $r8 $r0 i0               ; get address for arg recipient
lw   $r7 $r0 i4               ; get arg msg_data
lw   $r6 $r0 i5               ; get arg coins
move $r5 $sp                  ; save locals base register
cfei i184                     ; allocate 184 bytes for locals
addi $r2 $r5 i136             ; get offset reg for get_ptr
gtf  $r1 $zero i1             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i1176
ji   i1179
addi $r1 $r5 i56              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i1186
eq   $r0 $r1 $one
jnzi $r0 i1182
ji   i1185
addi $r1 $r5 i72              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i1186
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r2 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i168             ; get store offset
mcpi $r0 $r2 i8               ; store value
addi $r1 $r5 i168             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get offset reg for get_ptr
addi $r0 $r5 i112             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $zero
jnzi $r0 i1200
ji   i1202
gtf  $r4 $zero i8             ; get transaction field
ji   i1210
addi $r0 $r5 i112             ; get offset reg for get_ptr
lw   $r0 $r0 i0               ; extract_value @ 0
eq   $r0 $r0 $one
jnzi $r0 i1207
ji   i1209
gtf  $r4 $zero i23            ; get transaction field
ji   i1210
gtf  $r4 $zero i23            ; get transaction field
move $r2 $zero                ; parameter from branch to block argument
lt   $r0 $r2 $r4              ; asm block
jnzi $r0 i1214
ji   i1264
addi $r3 $r5 i128             ; get offset reg for get_ptr
gtf  $r1 $r2 i513             ; get transaction field
eq   $r0 $r1 $zero
jnzi $r0 i1219
ji   i1222
addi $r1 $r5 i48              ; get offset reg for get_ptr
sw   $r1 $zero i0             ; insert_value @ 0
ji   i1253
eq   $r0 $r1 $one
jnzi $r0 i1225
ji   i1228
addi $r1 $r5 i64              ; get offset reg for get_ptr
sw   $r1 $one i0              ; insert_value @ 0
ji   i1253
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1232
ji   i1236
addi $r1 $r5 i80              ; get offset reg for get_ptr
lw   $r0 data_0               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1253
lw   $r0 data_1               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1240
ji   i1244
addi $r1 $r5 i88              ; get offset reg for get_ptr
lw   $r0 data_1               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1253
lw   $r0 data_2               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1248
ji   i1252
addi $r1 $r5 i96              ; get offset reg for get_ptr
lw   $r0 data_2               ; literal instantiation
sw   $r1 $r0 i0               ; insert_value @ 0
ji   i1253
rvrt $zero
movi $r0 i8                   ; get length for mcp
mcp  $r3 $r1 $r0              ; copy memory with mem_copy
addi $r0 $r5 i176             ; get offset reg for get_ptr
addi $r0 $r5 i176             ; get store offset
mcpi $r0 $r3 i8               ; store value
addi $r0 $r5 i176             ; get offset reg for get_ptr
lw   $r1 $r0 i0               ; extract_value @ 0
lw   $r0 data_0               ; literal instantiation
eq   $r0 $r1 $r0
jnzi $r0 i1266
ji   i1275
lw   $r0 data_3               ; literal instantiation
rvrt $r0
addi $r1 $r5 i0               ; get offset reg for get_ptr
addi $r0 $r1 i0               ; get struct field(s) 0 offset
mcpi $r0 $r8 i32              ; store struct field value
lw   $r0 data_14              ; literal instantiation
sw   $r1 $r0 i4               ; insert_value @ 1
sw   $r1 $r7 i5               ; insert_value @ 2
lw   $r0 data_6               ; literal instantiation
smo  $r1 $r0 $r2 $r6
ret  $zero                    ; returning unit as zero
add  $r2 $r2 $one
ji   i1211
.data:
data_0 .word 2
data_1 .word 3
data_2 .word 4
data_3 .word 18446744073709486082
data_4 .word 32
data_5 .word 40
data_6 .word 16
data_7 .word 48
data_8 .word 5
data_9 .word 6
data_10 .word 24
data_11 .word 7
data_12 .word 8
data_13 .word 9
data_14 .word 10
data_15 .word 3484451715
data_16 .word 3915916946
data_17 .word 3206512437
data_18 .word 414011635
data_19 .word 2349839391
data_20 .word 3766983838
data_21 .word 3420834261
data_22 .word 2455035616
data_23 .word 1242394732
data_24 .word 322885143
data_25 .word 2436776275

  Bytecode size is 5316 bytes.
