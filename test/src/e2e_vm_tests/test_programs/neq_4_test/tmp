[0m[32mCompiled library "stdlib".
[0mCODE BLOCK
NODE return "neq" fn entry (bool)
Evaluating self
Evaluating other
CODE BLOCK
NODE return if exp (bool)
Evaluating self
Evaluating other
CODE BLOCK
[core_lang/src/asm_generation/expression/mod.rs:421] &body = [
    Op {
        opcode: Right(
            Label(
                Label(
                    5,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
]
[core_lang/src/asm_generation/expression/if_exp.rs:50] &condition = [
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "eq fn call",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "4",
                ),
                Virtual(
                    "1",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "self",
                    start: 3297,
                    end: 3301,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "5",
                ),
                Virtual(
                    "2",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "other",
                    start: 3305,
                    end: 3310,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    5,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
]
CODE BLOCK
NODE return literal false (bool)
[core_lang/src/asm_generation/mod.rs:943] &ops = [
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "6",
                ),
                DataId(
                    1,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "false",
                    start: 3314,
                    end: 3319,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
]
RETURN in return literal false (bool)
[core_lang/src/asm_generation/expression/mod.rs:340] &asm = [
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "6",
                ),
                DataId(
                    1,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "false",
                    start: 3314,
                    end: 3319,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
]
CODE BLOCK
NODE return literal true (bool)
[core_lang/src/asm_generation/mod.rs:943] &ops = [
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "7",
                ),
                DataId(
                    2,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "true",
                    start: 3329,
                    end: 3333,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
]
RETURN in return literal true (bool)
[core_lang/src/asm_generation/expression/mod.rs:340] &asm = [
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "7",
                ),
                DataId(
                    2,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "true",
                    start: 3329,
                    end: 3333,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
]
[core_lang/src/asm_generation/mod.rs:943] &ops = [
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "begin if expression",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "eq fn call",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "4",
                ),
                Virtual(
                    "1",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "self",
                    start: 3297,
                    end: 3301,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "5",
                ),
                Virtual(
                    "2",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "other",
                    start: 3305,
                    end: 3310,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    5,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            JumpIfNotEq(
                Virtual(
                    "3",
                ),
                Constant(
                    One,
                ),
                Label(
                    3,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "6",
                ),
                DataId(
                    1,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "false",
                    start: 3314,
                    end: 3319,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "6",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ false }",
                    start: 3312,
                    end: 3321,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    4,
                ),
            ),
        ),
        comment: "end of then branch",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    3,
                ),
            ),
        ),
        comment: "beginning of else branch",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "7",
                ),
                DataId(
                    2,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "true",
                    start: 3329,
                    end: 3333,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "7",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    4,
                ),
            ),
        ),
        comment: "End of if exp",
        owning_span: None,
    },
]
RETURN in return if exp (bool)
[core_lang/src/asm_generation/expression/mod.rs:340] &asm = [
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "begin if expression",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "eq fn call",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "4",
                ),
                Virtual(
                    "1",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "self",
                    start: 3297,
                    end: 3301,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "5",
                ),
                Virtual(
                    "2",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "other",
                    start: 3305,
                    end: 3310,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    5,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            JumpIfNotEq(
                Virtual(
                    "3",
                ),
                Constant(
                    One,
                ),
                Label(
                    3,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "6",
                ),
                DataId(
                    1,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "false",
                    start: 3314,
                    end: 3319,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "6",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ false }",
                    start: 3312,
                    end: 3321,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    4,
                ),
            ),
        ),
        comment: "end of then branch",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    3,
                ),
            ),
        ),
        comment: "beginning of else branch",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "7",
                ),
                DataId(
                    2,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "true",
                    start: 3329,
                    end: 3333,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "7",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    4,
                ),
            ),
        ),
        comment: "End of if exp",
        owning_span: None,
    },
]
[core_lang/src/asm_generation/mod.rs:943] &ops = [
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "neq fn call",
        owning_span: None,
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "1",
                ),
                DataId(
                    0,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "4",
                    start: 34,
                    end: 35,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/test/src/e2e_vm_tests/test_programs/neq_4_test/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "2",
                ),
                DataId(
                    0,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "4",
                    start: 39,
                    end: 40,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/test/src/e2e_vm_tests/test_programs/neq_4_test/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "begin if expression",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "eq fn call",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "4",
                ),
                Virtual(
                    "1",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "self",
                    start: 3297,
                    end: 3301,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "5",
                ),
                Virtual(
                    "2",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "other",
                    start: 3305,
                    end: 3310,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    5,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            JumpIfNotEq(
                Virtual(
                    "3",
                ),
                Constant(
                    One,
                ),
                Label(
                    3,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "6",
                ),
                DataId(
                    1,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "false",
                    start: 3314,
                    end: 3319,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "6",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ false }",
                    start: 3312,
                    end: 3321,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    4,
                ),
            ),
        ),
        comment: "end of then branch",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    3,
                ),
            ),
        ),
        comment: "beginning of else branch",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "7",
                ),
                DataId(
                    2,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "true",
                    start: 3329,
                    end: 3333,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "7",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    4,
                ),
            ),
        ),
        comment: "End of if exp",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    2,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    2,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
]
RETURN in return "neq" fn entry (bool)
[core_lang/src/asm_generation/expression/mod.rs:340] &asm = [
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "neq fn call",
        owning_span: None,
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "1",
                ),
                DataId(
                    0,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "4",
                    start: 34,
                    end: 35,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/test/src/e2e_vm_tests/test_programs/neq_4_test/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "2",
                ),
                DataId(
                    0,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "4",
                    start: 39,
                    end: 40,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/test/src/e2e_vm_tests/test_programs/neq_4_test/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "begin if expression",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Comment,
        ),
        comment: "eq fn call",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "4",
                ),
                Virtual(
                    "1",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "self",
                    start: 3297,
                    end: 3301,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "5",
                ),
                Virtual(
                    "2",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "other",
                    start: 3305,
                    end: 3310,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    5,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            JumpIfNotEq(
                Virtual(
                    "3",
                ),
                Constant(
                    One,
                ),
                Label(
                    3,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "6",
                ),
                DataId(
                    1,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "false",
                    start: 3314,
                    end: 3319,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    6,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "6",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ false }",
                    start: 3312,
                    end: 3321,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    4,
                ),
            ),
        ),
        comment: "end of then branch",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    3,
                ),
            ),
        ),
        comment: "beginning of else branch",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Left(
            LWDataId(
                Virtual(
                    "7",
                ),
                DataId(
                    2,
                ),
            ),
        ),
        comment: "literal instantiation",
        owning_span: Some(
            Span {
                span: Span {
                    str: "true",
                    start: 3329,
                    end: 3333,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    7,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Left(
            MOVE(
                Virtual(
                    "0",
                ),
                Virtual(
                    "7",
                ),
            ),
        ),
        comment: "",
        owning_span: Some(
            Span {
                span: Span {
                    str: "{ true }",
                    start: 3327,
                    end: 3335,
                },
                path: Some(
                    "/Users/alexanderhansen/code/sway/stdlib/src/main.sw",
                ),
            },
        ),
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    4,
                ),
            ),
        ),
        comment: "End of if exp",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Jump(
                Label(
                    2,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
    Op {
        opcode: Right(
            Label(
                Label(
                    2,
                ),
            ),
        ),
        comment: "",
        owning_span: None,
    },
]
.program:
jump .0
noop
data section offset placeholder         ; data section offset
.0                                      ; end of metadata
data section register load placeholder
add $ds $ds $is
                                        ; neq fn call
lw $r1 data_0                           ; literal instantiation
lw $r2 data_0                           ; literal instantiation
                                        ; begin if expression
                                        ; eq fn call
move $r4 $r1
move $r5 $r2
.5
jnei $r3 $one .3
lw $r6 data_1                           ; literal instantiation
jump .6
.6
move $r0 $r6
jump .4                                 ; end of then branch
.3                                      ; beginning of else branch
lw $r7 data_2                           ; literal instantiation
jump .7
.7
move $r0 $r7
.4                                      ; End of if exp
jump .2
.2
jump .1
.1
ret $r0                                 ; main fn return value
.data:
data_0 .u64 0x04
data_1 .bool 0x00
data_2 .bool 0x01

[0m[32mCompiled script "neq_4_test".
[0mBytecode size is 92 bytes.
