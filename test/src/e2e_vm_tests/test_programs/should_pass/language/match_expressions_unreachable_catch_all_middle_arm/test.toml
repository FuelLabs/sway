category = "compile"

#check: $()Match arm is unreachable

#check: $()let _x = match e1_1 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()_ => 0,
#nextln: $()Catch-all arm `_` makes all match arms below it unreachable.
#check: $()Enum::A => 0,
#nextln: $()Match arm `Enum::A` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e1_1 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()_ => 0,
#nextln: $()Catch-all arm `_` makes all match arms below it unreachable.
#check: $()Enum::E(_) => 0,
#nextln: $()Match arm `Enum::E(_)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e1_2 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()_ => 0,
#nextln: $()Catch-all arm `_` makes all match arms below it unreachable.
#check: $()Enum::C => 0,
#nextln: $()Match arm `Enum::C` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e1_2 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()_ => 0,
#nextln: $()Catch-all arm `_` makes all match arms below it unreachable.
#check: $()Enum::C => 0,
#nextln: $()Enum::D => 0,
#nextln: $()Match arm `Enum::D` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e2_1 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()x => {
#nextln: $()Catch-all arm `x` makes all match arms below it unreachable.
#check: $()Enum::A => 0,
#nextln: $()Match arm `Enum::A` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e2_1 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()x => {
#nextln: $()Catch-all arm `x` makes all match arms below it unreachable.
#check: $()Enum::E(_) => 0,
#nextln: $()Match arm `Enum::E(_)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e2_2 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()x => {
#nextln: $()Catch-all arm `x` makes all match arms below it unreachable.
#check: $()Enum::C => 0,
#nextln: $()Match arm `Enum::C` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e2_2 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()x => {
#nextln: $()Catch-all arm `x` makes all match arms below it unreachable.
#check: $()_ => 0,
#nextln: $()Match arm `_` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e2_3 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()x => {
#nextln: $()Catch-all arm `x` makes all match arms below it unreachable.
#check: $()Enum::E(_) => 0,
#nextln: $()Match arm `Enum::E(_)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match e2_4 {
#nextln: $()The expression to match on is of type "Enum".

#check: $()y => {
#nextln: $()Catch-all arm `y` makes all match arms below it unreachable.
#check: $()_ => 0,
#nextln: $()Match arm `_` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s1 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()_ => 0,
#nextln: $()Catch-all arm `_` makes all match arms below it unreachable.
#check: $()Struct { x: false, y:0, z } => z.0,
#nextln: $()Match arm `Struct { x: false, y:0, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s2 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()x => {
#nextln: $()Catch-all arm `x` makes all match arms below it unreachable.
#check: $()Struct { x: false, y:0, z } => z.0,
#nextln: $()Match arm `Struct { x: false, y:0, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s3 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x, y, z } => if x { y } else { z.0 },
#nextln: $()Catch-all arm `Struct { x, y, z }` makes all match arms below it unreachable.
#check: $()Struct { x: false, y, z } => y + z.0,
#nextln: $()Match arm `Struct { x: false, y, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s4 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x:_, y:_, z:_ } => 0,
#nextln: $()Catch-all arm `Struct { x:_, y:_, z:_ }` makes all match arms below it unreachable.
#check: $()Struct { x: false, y, z } => y + z.0,
#nextln: $()Match arm `Struct { x: false, y, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s5 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: a, y: b, z: c } => if a { b } else { c.0 },
#nextln: $()Catch-all arm `Struct { x: a, y: b, z: c }` makes all match arms below it unreachable.
#check: $()Struct { x: false, y, z } => y + z.0,
#nextln: $()Match arm `Struct { x: false, y, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s6 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: a, y: b, z: (j, k, l) } => if a { b } else { j + k + l },
#nextln: $()Catch-all arm `Struct { x: a, y: b, z: (j, k, l) }` makes all match arms below it unreachable.
#check: $()Struct { x: false, y, z } => y + z.0,
#nextln: $()Match arm `Struct { x: false, y, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s7 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: a, y: b, z: (_, _, _) } => if a { b } else { 0 },
#nextln: $()Catch-all arm `Struct { x: a, y: b, z: (_, _, _) }` makes all match arms below it unreachable.
#check: $()Struct { x: true, y, z } => y + z.0,
#nextln: $()Match arm `Struct { x: true, y, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t1 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u64)".

#check: $()_ => 0,
#nextln: $()Catch-all arm `_` makes all match arms below it unreachable.
#check: $()(false, _, s, n) => n + s.y,
#nextln: $()Match arm `(false, _, s, n)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t2 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u64)".

#check: $()x => x.3,
#nextln: $()Catch-all arm `x` makes all match arms below it unreachable.
#check: $()(false, _, s, n) => n + s.y,
#nextln: $()Match arm `(false, _, s, n)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t3 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u64)".

#check: $()(b, e, s, n) => {
#nextln: $()Catch-all arm `(b, e, s, n)` makes all match arms below it unreachable.
#check: $()(false, _, s, n) => n + s.y,
#nextln: $()Match arm `(false, _, s, n)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t4 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u64)".

#check: $()(_, _, _, _) => 0,
#nextln: $()Catch-all arm `(_, _, _, _)` makes all match arms below it unreachable.
#check: $()(true, _, s, n) => n + s.y,
#nextln: $()Match arm `(true, _, s, n)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t5 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u64)".

#check: $()(_, _, _, n) => n,
#nextln: $()Catch-all arm `(_, _, _, n)` makes all match arms below it unreachable.
#check: $()(false, _, s, n) => n + s.y,
#nextln: $()Match arm `(false, _, s, n)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t6 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u64)".

#check: $()(_, _, Struct { x, y, z: (j , k, l)}, n) => {
#nextln: $()Catch-all arm `(_, _, Struct { x, y, z: (j , k, l)}, n)` makes all match arms below it unreachable.
#check: $()(true, _, s, n) => n + s.y,
#nextln: $()Match arm `(true, _, s, n)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t7 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u64)".

#check: $()(_, _, Struct { x: _, y: _, z: (_ , k, _)}, n) => {
#nextln: $()Catch-all arm `(_, _, Struct { x: _, y: _, z: (_ , k, _)}, n)` makes all match arms below it unreachable.
#check: $()(false, _, s, n) => n + s.y,
#nextln: $()Match arm `(false, _, s, n)` is unreachable.

#not: $()or_no_warning

#check: $()Match arm is unreachable

#check: $()let _x = match or1 {
#nextln: $()The expression to match on is of type "u64".

#check: $()1 | 2 | _ => 0,
#nextln: $()Catch-all arm `1 | 2 | _` makes all match arms below it unreachable.
#check: $()4 => 0,
#nextln: $()Match arm `4` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match or2 {
#nextln: $()The expression to match on is of type "u64".

#check: $()1 | _ | 2 => 0,
#nextln: $()Catch-all arm `1 | _ | 2` makes all match arms below it unreachable.
#check: $()5 => 0,
#nextln: $()Match arm `5` is unreachable.

expected_warnings = 95
