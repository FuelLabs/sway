category = "compile"

#check: $()Match arm is unreachable

#check: $()let _x = match e {
#nextln: $()The expression to match on is of type "Enum".

#check: $()Enum::E(_) => 0,
#nextln: $()Preceding match arms already match all the values that `Enum::E(1)` can match.
#nextln: $()Enum::E(1) => 0,
#nextln: $()Match arm `Enum::E(1)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s1 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: false, y, z: (0, 0, 0) } => y,
#nextln: $()Preceding match arms already match all the values that `Struct { x: true, y: 0, z }` can match.
#nextln: $()Struct { x: true, y: 0, z } => z.0,
#nextln: $()Match arm `Struct { x: true, y: 0, z }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s2 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: false, y: 0, z } => z.0,
#nextln: $()Preceding match arms already match all the values that `Struct { x: true, y: 0, z: (0, 0, 0) }` can match.
#nextln: $()Struct { x: true, y: 0, z: (0, 0, 0) } => 0,
#nextln: $()Match arm `Struct { x: true, y: 0, z: (0, 0, 0) }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s3 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: false, y: 0, z } => z.0,
#nextln: $()Preceding match arms already match all the values that `Struct { x: true, y: 0, z: (0, _, _) }` can match.
#nextln: $()Struct { x: true, y: 0, z: (0, _, _) } => 0,
#nextln: $()Match arm `Struct { x: true, y: 0, z: (0, _, _) }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s4 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: false, y: 0, z } => z.0,
#nextln: $()Preceding match arms already match all the values that `Struct { x: true, y: 0, z: _ }` can match.
#nextln: $()Struct { x: true, y: 0, z: _ } => 0,
#nextln: $()Match arm `Struct { x: true, y: 0, z: _ }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s5 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: false, y, z } => y + z.0,
#nextln: $()Preceding match arms already match all the values that `Struct { x: false, y: 0, z: _ }` can match.
#nextln: $()Struct { x: false, y: 0, z: _ } => 0,
#nextln: $()Match arm `Struct { x: false, y: 0, z: _ }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match s6 {
#nextln: $()The expression to match on is of type "Struct".

#check: $()Struct { x: false, y: 0, z } => z.0,
#nextln: $()Preceding match arms already match all the values that `Struct { x: true, y: 0, z: (0, 0, 0) }` can match.
#nextln: $()Struct { x: true, y: 0, z: (0, 0, 0) } => 0,
#nextln: $()Match arm `Struct { x: true, y: 0, z: (0, 0, 0) }` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t1 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u32)".

#check: $()(false, _, s, 0) => s.y,
#nextln: $()Preceding match arms already match all the values that `(false, Enum::A, s, 0)` can match.
#nextln: $()(false, Enum::A, s, 0) => s.y,
#nextln: $()Match arm `(false, Enum::A, s, 0)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t2 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u32)".

#check: $()(false, _, s, 0) => s.y,
#nextln: $()Preceding match arms already match all the values that `(false, Enum::A, Struct { x: true, y, z:_ }, 0)` can match.
#nextln: $()(false, Enum::A, Struct { x: true, y, z:_ }, 0) => y,
#nextln: $()Match arm `(false, Enum::A, Struct { x: true, y, z:_ }, 0)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t3 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u32)".

#check: $()(false, _, s, 0) => s.y,
#nextln: $()Preceding match arms already match all the values that `(true, _, Struct { x: true, y, z: _}, 0)` can match.
#nextln: $()(true, _, Struct { x: true, y, z: _}, 0) => y,
#nextln: $()Match arm `(true, _, Struct { x: true, y, z: _}, 0)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t4 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u32)".

#check: $()(false, _, s, 0) => s.y,
#nextln: $()Preceding match arms already match all the values that `(true, _, _, 0)` can match.
#nextln: $()(true, _, _, 0) => 0,
#nextln: $()Match arm `(true, _, _, 0)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t5 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u32)".

#check: $()(false, _, s, 0) => s.y,
#nextln: $()Preceding match arms already match all the values that `(true, _, Struct { x: _, y: _, z: (j, k, l)}, 0)` can match.
#nextln: $()(true, _, Struct { x: _, y: _, z: (j, k, l)}, 0) => {
#nextln: $()Match arm `(true, _, Struct { x: _, y: _, z: (j, k, l)}, 0)` is unreachable.

#check: $()Match arm is unreachable

#check: $()let _x = match t6 {
#nextln: $()The expression to match on is of type "(bool, Enum, Struct, u32)".

#check: $()(false, _, s, 0) => s.y,
#nextln: $()Preceding match arms already match all the values that `(true, _, Struct { x: _, y: _, z: (_ , k, _)}, 0)` can match.
#nextln: $()(true, _, Struct { x: _, y: _, z: (_ , k, _)}, 0) => {
#nextln: $()Match arm `(true, _, Struct { x: _, y: _, z: (_ , k, _)}, 0)` is unreachable.

#check: $()warning

#check: $()Struct { x: false, y, z } => y,
#nextln: $()This declaration is never used.

#check: $()warning

#check: $()Struct { x: false, y, z } => z.0,
#nextln: $()This declaration is never used.

expected_warnings = 15