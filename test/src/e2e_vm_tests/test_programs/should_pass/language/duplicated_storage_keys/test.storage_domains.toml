category = "compile"
experimental = { storage_domains = true }

# check: $()Two storage fields have the same storage key
# check: $()f1:u64 = 1,
# nextln: $()"storage.f1" has the same storage key as "storage.f2".
# check: $()f2 in 0xcecf0a910789de762c699a85a66835df1662df633238cbb25804b7f78640747b: u64 = 2,
# nextln: $()"storage.f2" is declared here.
# check: $()The key of "storage.f1" is generated by the compiler using the following formula:
# nextln: $()sha256((0u8, "storage.f1"))
# nextln: $()The common key is: 0xcecf0a910789de762c699a85a66835df1662df633238cbb25804b7f78640747b.

# check: $()Two storage fields have the same storage key
# check: $()f3 in 0x5f4c20ce4bd128e5393a4c2b82007dac795fa0006d01acf8db4c42632bc680ca: u64 = 2,
# nextln: $()"storage::ns1.f3" has the same storage key as "storage::ns2.f4".
# check: $()f4 in 0x5f4c20ce4bd128e5393a4c2b82007dac795fa0006d01acf8db4c42632bc680ca: u64 = 2,
# nextln: $()"storage::ns2.f4" is declared here.
# check: $()Both keys are explicitly defined by using the `in` keyword.
# nextln: $()The common key is: 0x5f4c20ce4bd128e5393a4c2b82007dac795fa0006d01acf8db4c42632bc680ca.

# check: $()Two storage fields have the same storage key
# check: $()f5 in 0x41e70e0fdfa49becc40cbfd5c057ab0540e8844f3d737fa3b1ab21a564b48069: u64 = 3,
# nextln: $()"storage::ns3.f5" has the same storage key as "storage::ns4.f6".
# check: $()f6: u64 = 4,
# nextln: $()"storage::ns4.f6" is declared here.
# check: $()The key of "storage::ns4.f6" is generated by the compiler using the following formula:
# nextln: $()sha256((0u8, "storage::ns4.f6"))
# nextln: $()The common key is: 0x41e70e0fdfa49becc40cbfd5c057ab0540e8844f3d737fa3b1ab21a564b48069.

expected_warnings = 9
