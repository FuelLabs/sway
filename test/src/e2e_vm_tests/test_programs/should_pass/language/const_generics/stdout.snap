---
source: test/src/snapshot/mod.rs
assertion_line: 162
---
> forc build --path test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics --release
exit status: 1
output:
    Building test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics
   Compiling library std (sway-lib-std)
   Compiling script const_generics (test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics)
warning
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:50:5
   |
48 | enum TwoVariants<T, const N: u64> {
49 |     Nothing: (),
50 |     Array: [T; N]
   |     ----- Enum variant Array is never constructed.
51 | }
52 | 
   |
____

warning
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:87:5
   |
85 |       }
86 |   
87 |       fn return_n2_2(self) -> u64 {
   |  _____-
88 | |         N2
89 | |     }
   | |_____- This method is never called.
90 |   }
91 |   
   |
____

warning
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:146:9
    |
144 | 
145 |     // string arrays
146 |     let a: str[3] = __to_str_array("ABC");
    |         - This declaration is never used.
147 |     assert(a.len() == 3);
148 |     let _ = __dbg(a.len());
    |
____

warning
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:150:9
    |
148 |     let _ = __dbg(a.len());
149 | 
150 |     let a: str[5] = __to_str_array("ABCDE");
    |         - This declaration is never used.
151 |     assert(a.len() == 5);
152 |     let _ = __dbg(a.len());
    |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:17:15
   |
15 | }
16 | 
17 | impl<T, const N: u64> A for [T; N] {
   |               ^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
18 |     fn my_len(self) -> u64 {
19 |         match LotsOfVariants::A(N) {
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:27:19
   |
25 | }
26 | 
27 | struct S<T, const N: u64> {
   |                   ^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
28 | }
29 | 
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:30:15
   |
28 | }
29 | 
30 | impl<T, const Z: u64> S<T, Z> {
   |               ^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
31 |     pub fn len_xxx(self) -> u64 {
32 |         Z
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:37:23
   |
35 | 
36 | // Enum with just one variant
37 | enum OneVariant<const N: u64> {
   |                       ^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
38 |     A: [u64; N],
39 | }
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:41:12
   |
39 | }
40 | 
41 | impl<const Z: u64> OneVariant<Z> {
   |            ^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
42 |     pub fn return_n(self) -> u64 {
43 |         Z
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:48:27
   |
46 | 
47 | // Enum with more than one variant
48 | enum TwoVariants<T, const N: u64> {
   |                           ^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
49 |     Nothing: (),
50 |     Array: [T; N]
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:53:15
   |
51 | }
52 | 
53 | impl<T, const N: u64> TwoVariants<T, N> {
   |               ^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
54 |     pub fn len_xxx2(self) -> u64 {
55 |         N
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:60:32
   |
58 | 
59 | // Enum with more than one const generics
60 | enum TwoConstGenerics<T, const N1: u64, const N2: u64> {
   |                                ^^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
61 |     A: [T; N1],
62 |     B: [T; N2],
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:60:47
   |
58 | 
59 | // Enum with more than one const generics
60 | enum TwoConstGenerics<T, const N1: u64, const N2: u64> {
   |                                               ^^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
61 |     A: [T; N1],
62 |     B: [T; N2],
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:65:15
   |
63 | }
64 | 
65 | impl<T, const N1: u64, const N2: u64> TwoConstGenerics<T, N1, N2> {
   |               ^^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
66 |     fn return_n1(self) -> u64 {
67 |         N1
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:65:30
   |
63 | }
64 | 
65 | impl<T, const N1: u64, const N2: u64> TwoConstGenerics<T, N1, N2> {
   |                              ^^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
66 |     fn return_n1(self) -> u64 {
67 |         N1
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:82:15
   |
80 | }
81 | 
82 | impl<T, const N2: u64, const N1: u64> TwoConstGenerics<T, N2, N1> {
   |               ^^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
83 |     fn return_n1_2(self) -> u64 {
84 |         N1
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:82:30
   |
80 | }
81 | 
82 | impl<T, const N2: u64, const N1: u64> TwoConstGenerics<T, N2, N1> {
   |                              ^^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
83 |     fn return_n1_2(self) -> u64 {
84 |         N1
   |
____

error
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:93:19
   |
91 | 
92 | #[inline(never)]
93 | fn return_n<const NNN: u64>() -> u64 {
   |                   ^^^ This needs "const_generics" to be enabled, but it is currently disabled. For more details go to https://github.com/FuelLabs/sway/issues/6860.
94 |     NNN
95 | }
   |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:102:26
    |
100 |     let a = [C {}].my_len();
101 |     assert(a == 1);
102 |     let _ = __dbg([C {}].len());
    |                          ^^^ No method "len([C; 1])" found for type "[C; 1]".
103 |     assert([C {}].len() == 1);
104 | 
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:103:19
    |
101 |     assert(a == 1);
102 |     let _ = __dbg([C {}].len());
103 |     assert([C {}].len() == 1);
    |                   ^^^ No method "len([C; 1])" found for type "[C; 1]".
104 | 
105 |     let b = [C {}, C{}].my_len();
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:103:25
    |
101 |     assert(a == 1);
102 |     let _ = __dbg([C {}].len());
103 |     assert([C {}].len() == 1);
    |                         ^^ No method "eq({unknown}, numeric) -> bool" found for type "{unknown}".
104 | 
105 |     let b = [C {}, C{}].my_len();
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:107:31
    |
105 |     let b = [C {}, C{}].my_len();
106 |     assert(b == 2);
107 |     let _ = __dbg([C {}, C{}].len());
    |                               ^^^ No method "len([C; 2])" found for type "[C; 2]".
108 |     assert([C {}, C{}].len() == 2);
109 | 
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:108:24
    |
106 |     assert(b == 2);
107 |     let _ = __dbg([C {}, C{}].len());
108 |     assert([C {}, C{}].len() == 2);
    |                        ^^^ No method "len([C; 2])" found for type "[C; 2]".
109 | 
110 |     let s: S<u64, 3> = S { };
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:108:30
    |
106 |     assert(b == 2);
107 |     let _ = __dbg([C {}, C{}].len());
108 |     assert([C {}, C{}].len() == 2);
    |                              ^^ No method "eq({unknown}, numeric) -> bool" found for type "{unknown}".
109 | 
110 |     let s: S<u64, 3> = S { };
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:147:14
    |
145 |     // string arrays
146 |     let a: str[3] = __to_str_array("ABC");
147 |     assert(a.len() == 3);
    |              ^^^ No method "len(str[3])" found for type "str[3]".
148 |     let _ = __dbg(a.len());
149 | 
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:147:20
    |
145 |     // string arrays
146 |     let a: str[3] = __to_str_array("ABC");
147 |     assert(a.len() == 3);
    |                    ^^ No method "eq({unknown}, numeric) -> bool" found for type "{unknown}".
148 |     let _ = __dbg(a.len());
149 | 
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:148:21
    |
146 |     let a: str[3] = __to_str_array("ABC");
147 |     assert(a.len() == 3);
148 |     let _ = __dbg(a.len());
    |                     ^^^ No method "len(str[3])" found for type "str[3]".
149 | 
150 |     let a: str[5] = __to_str_array("ABCDE");
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:151:14
    |
149 | 
150 |     let a: str[5] = __to_str_array("ABCDE");
151 |     assert(a.len() == 5);
    |              ^^^ No method "len(str[5])" found for type "str[5]".
152 |     let _ = __dbg(a.len());
153 | }
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:151:20
    |
149 | 
150 |     let a: str[5] = __to_str_array("ABCDE");
151 |     assert(a.len() == 5);
    |                    ^^ No method "eq({unknown}, numeric) -> bool" found for type "{unknown}".
152 |     let _ = __dbg(a.len());
153 | }
    |
____

error
   --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:152:21
    |
150 |     let a: str[5] = __to_str_array("ABCDE");
151 |     assert(a.len() == 5);
152 |     let _ = __dbg(a.len());
    |                     ^^^ No method "len(str[5])" found for type "str[5]".
153 | }
154 | 
    |
____

  Aborting due to 26 errors.
error: Failed to compile const_generics

> forc test --path test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics --experimental const_generics --test-threads 1 --dbgs --reverts
exit status: 0
output:
    Building test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics
   Compiling library std (sway-lib-std)
   Compiling script const_generics (test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics)
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    Finished debug [unoptimized + fuel] target(s) [7.008 KB] in ???
=======
=======
>>>>>>> aefe47720 (update snapshot tests)
<<<<<<< HEAD
    Finished debug [unoptimized + fuel] target(s) [6.952 KB] in ???
=======
<<<<<<< HEAD
    Finished debug [unoptimized + fuel] target(s) [7.736 KB] in ???
=======
    Finished debug [unoptimized + fuel] target(s) [8.08 KB] in ???
>>>>>>> 5dd869289 (update snapshot tests)
>>>>>>> c6c149462 (update snapshot tests)
<<<<<<< HEAD
>>>>>>> ae09d9087 (update snapshot tests)
=======
=======
    Finished debug [unoptimized + fuel] target(s) [8.312 KB] in ???
>>>>>>> f63d45c7e (update snapshot tests)
>>>>>>> aefe47720 (update snapshot tests)
=======
    Finished debug [unoptimized + fuel] target(s) [7.424 KB] in ???
>>>>>>> d3c89a496 (rebase issues)
=======
warning
  --> test/src/e2e_vm_tests/test_programs/should_pass/language/const_generics/src/main.sw:87:5
   |
85 |       }
86 |   
87 |       fn return_n2_2(self) -> u64 {
   |  _____-
88 | |         N2
89 | |     }
   | |_____- This method is never called.
90 |   }
91 |   
   |
____

  Compiled script "const_generics" with 1 warning.
    Finished debug [unoptimized + fuel] target(s) [7.472 KB] in ???
>>>>>>> 53492e2b0 (assert with renaming issue)
     Running 1 test, filtered 0 tests

tested -- const_generics

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      test run_main ... ok (???, 13758 gas)
=======
=======
>>>>>>> aefe47720 (update snapshot tests)
<<<<<<< HEAD
      test run_main ... ok (???, 13705 gas)
=======
<<<<<<< HEAD
      test run_main ... ok (???, 14112 gas)
=======
      test run_main ... ok (???, 14310 gas)
>>>>>>> 5dd869289 (update snapshot tests)
>>>>>>> c6c149462 (update snapshot tests)
<<<<<<< HEAD
>>>>>>> ae09d9087 (update snapshot tests)
=======
=======
      test run_main ... ok (???, 14436 gas)
>>>>>>> f63d45c7e (update snapshot tests)
>>>>>>> aefe47720 (update snapshot tests)
=======
      test run_main ... ok (???, 14005 gas)
>>>>>>> d3c89a496 (rebase issues)
=======
      test run_main ... ok (???, 14042 gas)
>>>>>>> 53492e2b0 (assert with renaming issue)
           debug output:
[src/main.sw:98:13] a = [1, 2]
[src/main.sw:102:13] [C {}].len() = 1
[src/main.sw:107:13] [C {}, C {}].len() = 2
[src/main.sw:111:13] s.len_xxx() = 3
[src/main.sw:117:13] e = OneVariant([1, 2, 3])
[src/main.sw:122:13] e = Nothing
[src/main.sw:141:13] return_n::<3>() = 3
[src/main.sw:143:13] return_n::<5>() = 5
[src/main.sw:148:13] a.len() = 3
[src/main.sw:152:13] a.len() = 5

test result: OK. 1 passed; 0 failed; finished in ???

    Finished in ???
