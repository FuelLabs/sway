.program:
ji   i4
noop
DATA_SECTION_OFFSET[0..32]
DATA_SECTION_OFFSET[32..64]
lw   $ds $is 1
add  $$ds $$ds $is
move $r3 $sp                  ; save locals base register
cfei i176                     ; allocate 176 bytes for all locals
addi $r0 $r3 i88              ; get offset reg for get_ptr
lw   $r1 data_0               ; literal instantiation
addi $r0 $r3 i88              ; get store offset
mcpi $r0 $r1 i32              ; store value
addi $r0 $r3 i0               ; get offset reg for get_ptr
lw   $r1 data_1               ; literal instantiation
addi $r0 $r3 i0               ; get store offset
mcpi $r0 $r1 i8               ; store value
move $r1 $sp                  ; save register for temporary stack value
cfei i24                      ; allocate 24 bytes for temporary array
muli $r0 $zero i8             ; insert_element relative offset
add  $r0 $r1 $r0              ; insert_element absolute offset
sw   $r0 $one i0              ; insert_element
lw   $r2 data_2               ; literal instantiation
muli $r0 $one i8              ; insert_element relative offset
add  $r0 $r1 $r0              ; insert_element absolute offset
sw   $r0 $r2 i0               ; insert_element
lw   $r2 data_3               ; literal instantiation
lw   $r0 data_2               ; literal instantiation
muli $r0 $r0 i8               ; insert_element relative offset
add  $r0 $r1 $r0              ; insert_element absolute offset
sw   $r0 $r2 i0               ; insert_element
addi $r0 $r3 i64              ; get offset reg for get_ptr
addi $r0 $r3 i64              ; get store offset
mcpi $r0 $r1 i24              ; store value
addi $r0 $r3 i88              ; get offset reg for get_ptr
addi $r2 $r3 i88              ; load address
move $r1 $sp                  ; save register for temporary stack value
cfei i48                      ; allocate 48 bytes for temporary struct
lw   $r0 data_4               ; literal instantiation for aggregate field
sw   $r1 $r0 i0               ; initialise aggregate field
addi $r0 $r1 i8               ; get struct field(s) 1 offset
mcpi $r0 $r2 i32              ; store struct field value
lw   $r0 data_5               ; literal instantiation
sw   $r1 $r0 i5               ; insert_value @ 2
addi $r0 $r3 i128             ; get offset reg for get_ptr
addi $r0 $r3 i128             ; get store offset
mcpi $r0 $r1 i48              ; store value
addi $r0 $r3 i120             ; get offset reg for get_ptr
move $r1 $sp                  ; save register for temporary stack value
cfei i8                       ; allocate 8 bytes for temporary struct
lw   $r0 data_6               ; literal instantiation for aggregate field
sw   $r1 $r0 i0               ; initialise aggregate field
addi $r0 $r3 i120             ; get store offset
mcpi $r0 $r1 i8               ; store value
addi $r2 $r3 i120             ; get offset reg for get_ptr
lw   $r1 data_7               ; literal instantiation
lw   $r0 data_8               ; loading size for LOGD
logd $zero $r1 $r2 $r0
ret  $zero                    ; returning unit as zero
noop                          ; word-alignment of data section
.data:
data_0 .b256 0xef86afa9696cf0dc6385e2c407a6e159a1103cefb7e2ae0636fb33d3cb2a9e4a
data_1 .str "Fuel"
data_2 .u64 0x02
data_3 .u64 0x03
data_4 .bool 0x01
data_5 .u64 0x0b
data_6 .u64 0x01
data_7 .u64 0xf894c
data_8 .u64 0x08

[1;38;5;11mwarning[0m
  [1;38;5;12m-->[0m /Users/mohammad/Desktop/fuel/sway/test/src/e2e_vm_tests/test_programs/should_pass/language/logging/src/main.sw:14:5
[1;38;5;12m   |[0m
[1;38;5;12m12 |[0m 
[1;38;5;12m13 |[0m enum TestEnum {
[1;38;5;12m14 |[0m     VariantOne: (),
[1;38;5;12m   |[0m[1;38;5;11m     ----------[0m [1;38;5;11mEnum variant VariantOne is never constructed.[0m
[1;38;5;12m15 |[0m     VariantTwo: (),
[1;38;5;12m16 |[0m }
[1;38;5;12m   |[0m
____

[1;38;5;11mwarning[0m
 [1;38;5;12m-->[0m /Users/mohammad/Desktop/fuel/sway/test/src/e2e_vm_tests/test_programs/should_pass/language/logging/src/main.sw:3:1
[1;38;5;12m  |[0m
[1;38;5;12m1 |[0m   
[1;38;5;12m2 |[0m   
[1;38;5;12m3 |[0m [1;38;5;11m/[0m fn log<T>(value: T) {
[1;38;5;12m4 |[0m [1;38;5;11m|[0m     __log::<T>(value);
[1;38;5;12m5 |[0m [1;38;5;11m|[0m }
[1;38;5;12m  |[0m [1;38;5;11m|[0m[1;38;5;11m_-[0m [1;38;5;11mThis function is never called.[0m
[1;38;5;12m6 |[0m   
[1;38;5;12m7 |[0m   struct TestStruct {
[1;38;5;12m  |[0m
____

[1;38;5;11mwarning[0m
  [1;38;5;12m-->[0m /Users/mohammad/Desktop/fuel/sway/test/src/e2e_vm_tests/test_programs/should_pass/language/logging/src/main.sw:8:5
[1;38;5;12m   |[0m
[1;38;5;12m 6 |[0m 
[1;38;5;12m 7 |[0m struct TestStruct {
[1;38;5;12m 8 |[0m     field_1: bool,
[1;38;5;12m   |[0m[1;38;5;11m     -------------[0m [1;38;5;11mThis struct field is never accessed.[0m
[1;38;5;12m 9 |[0m     field_2: b256,
[1;38;5;12m10 |[0m     field_3: u64,
[1;38;5;12m   |[0m
____

[1;38;5;11mwarning[0m
  [1;38;5;12m-->[0m /Users/mohammad/Desktop/fuel/sway/test/src/e2e_vm_tests/test_programs/should_pass/language/logging/src/main.sw:9:5
[1;38;5;12m   |[0m
[1;38;5;12m 7 |[0m 
[1;38;5;12m 8 |[0m     field_1: bool,
[1;38;5;12m 9 |[0m     field_2: b256,
[1;38;5;12m   |[0m[1;38;5;11m     -------------[0m [1;38;5;11mThis struct field is never accessed.[0m
[1;38;5;12m10 |[0m     field_3: u64,
[1;38;5;12m11 |[0m }
[1;38;5;12m   |[0m
____

[1;38;5;11mwarning[0m
  [1;38;5;12m-->[0m /Users/mohammad/Desktop/fuel/sway/test/src/e2e_vm_tests/test_programs/should_pass/language/logging/src/main.sw:10:5
[1;38;5;12m   |[0m
[1;38;5;12m 8 |[0m 
[1;38;5;12m 9 |[0m     field_2: b256,
[1;38;5;12m10 |[0m     field_3: u64,
[1;38;5;12m   |[0m[1;38;5;11m     ------------[0m [1;38;5;11mThis struct field is never accessed.[0m
[1;38;5;12m11 |[0m }
[1;38;5;12m   |[0m
____

  Bytecode size is 356 bytes.
  Script bytecode hash: 0xbf7939158e033ac3b0ce29b4ccb907ed60671740c4e1058e560b05f44e374d85
