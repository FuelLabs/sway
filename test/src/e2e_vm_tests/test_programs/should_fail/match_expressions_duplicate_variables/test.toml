category = "fail"

# check: $()Match pattern variable is already defined

# check: $()let _x = match s1 {
# nextln: $()`s1`, of type "Struct", is the value to match on.
# nextln: $()Struct { x: true, y: a_s1, z: a_s1 } => a_s1.0,
# nextln: $()Variable "a_s1" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "a_s1".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match s2 {
# nextln: $()`s2`, of type "Struct", is the value to match on.
# nextln: $()Struct { x, y: x, z: x } => x.0,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match s2 {
# nextln: $()`s2`, of type "Struct", is the value to match on.
# nextln: $()Struct { x, y: x, z: x } => x.0,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match s3 {
# nextln: $()`s3`, of type "Struct", is the value to match on.
# nextln: $()Struct { x, y: x, .. } => x,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match s4 {
# nextln: $()`s4`, of type "(Struct, Struct)", is the value to match on.
# nextln: $()(Struct { y, .. }, Struct { y, .. }) => y,
# nextln: $()Variable "y" is already defined in this match arm.
# nextln: $()Struct field "y" is just a shorthand notation for `y: y`. It defines a variable "y".
# nextln: $()This struct field "y" is the first definition of the variable "y".

# check: $()Consider declaring a variable with different name for either of the fields. E.g., `y: var_y`.

# check: $()Match pattern variable is already defined

# check: $()let _x = match t1 {
# nextln: $()`t1`, of type "(bool, Enum, Struct, u64)", is the value to match on.
# nextln: $()(true, a_t1, a_t1, a_t1) => a_t1,
# nextln: $()Variable "a_t1" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "a_t1".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match t1 {
# nextln: $()`t1`, of type "(bool, Enum, Struct, u64)", is the value to match on.
# nextln: $()(true, a_t1, a_t1, a_t1) => a_t1,
# nextln: $()Variable "a_t1" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "a_t1".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match t1 {
# nextln: $()`t1`, of type "(bool, Enum, Struct, u64)", is the value to match on.
# check: $()(a_t1, a_t1, a_t1, a_t1) => a_t1,
# nextln: $()Variable "a_t1" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "a_t1".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match t1 {
# nextln: $()`t1`, of type "(bool, Enum, Struct, u64)", is the value to match on.
# check: $()(a_t1, a_t1, a_t1, a_t1) => a_t1,
# nextln: $()Variable "a_t1" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "a_t1".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match t1 {
# nextln: $()`t1`, of type "(bool, Enum, Struct, u64)", is the value to match on.
# check: $()(a_t1, a_t1, a_t1, a_t1) => a_t1,
# nextln: $()Variable "a_t1" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "a_t1".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match t2 {
# nextln: $()`t2`, of type "(bool, Enum, Struct, u64, u64)", is the value to match on.
# nextln: $()(true, a_t2, Struct { x, .. }, a_t2, x) => a_t2,
# nextln: $()Variable "a_t2" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "a_t2".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match t2 {
# nextln: $()`t2`, of type "(bool, Enum, Struct, u64, u64)", is the value to match on.
# nextln: $()(true, a_t2, Struct { x, .. }, a_t2, x) => a_t2,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match t3 {
# nextln: $()`t3`, of type "(bool, Enum, Struct, u64, u64)", is the value to match on.
# nextln: $()(x, a_t3, Struct { .. }, a_t2, x) => a_t2,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "x".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match or1 {
# nextln: $()`or1`, of type "Struct", is the value to match on.
# nextln: $()Struct { x, y: x, z: x } | Struct { x, y: x, z: x } => x,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match or1 {
# nextln: $()`or1`, of type "Struct", is the value to match on.
# nextln: $()Struct { x, y: x, z: x } | Struct { x, y: x, z: x } => x,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match or1 {
# nextln: $()`or1`, of type "Struct", is the value to match on.
# nextln: $()Struct { x, y: x, z: x } | Struct { x, y: x, z: x } => x,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match or1 {
# nextln: $()`or1`, of type "Struct", is the value to match on.
# nextln: $()Struct { x, y: x, z: x } | Struct { x, y: x, z: x } => x,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()This struct field "x" is the first definition of the variable "x".
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match or2 {
# nextln: $()`or2`, of type "(Struct, Struct)", is the value to match on.
# nextln: $()(Struct { x, .. } | Struct { x, .. }, Struct { x, .. } | Struct { x, .. }) => if x { 0 } else { 1 },
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".
# nextln: $()This struct field "x" is the first definition of the variable "x".

# check: $()Consider declaring a variable with different name for either of the fields. E.g., `x: var_x`.

# check: $()let _x = match or2 {
# nextln: $()`or2`, of type "(Struct, Struct)", is the value to match on.
# nextln: $()(Struct { x, .. } | Struct { x, .. }, Struct { x, .. } | Struct { x, .. }) => if x { 0 } else { 1 },
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".
# nextln: $()This struct field "x" is the first definition of the variable "x".

# check: $()Consider declaring a variable with different name for either of the fields. E.g., `x: var_x`.

# check: $()Match pattern variable is already defined

# check: $()let _x = match or3 {
# nextln: $()`or3`, of type "Struct", is the value to match on.
# nextln: $()Struct { x: y | y | y, y, .. } | Struct { x: y | y | y, y, .. } => y,
# nextln: $()Variable "y" is already defined in this match arm.
# nextln: $()Struct field "y" is just a shorthand notation for `y: y`. It defines a variable "y".
# nextln: $()This is the first definition of the variable "y".

# check: $()Consider declaring a variable for the field "y" (e.g., `y: var_y`), or renaming the variable "y".

# check: $()Match pattern variable is already defined

# check: $()let _x = match or3 {
# nextln: $()`or3`, of type "Struct", is the value to match on.
# nextln: $()Struct { x: y | y | y, y, .. } | Struct { x: y | y | y, y, .. } => y,
# nextln: $()Variable "y" is already defined in this match arm.
# nextln: $()Struct field "y" is just a shorthand notation for `y: y`. It defines a variable "y".
# nextln: $()This is the first definition of the variable "y".

# check: $()Consider declaring a variable for the field "y" (e.g., `y: var_y`), or renaming the variable "y".

# check: $()Match pattern variable is already defined

# check: $()let _x = match or4 {
# nextln: $()`or4`, of type "Enum", is the value to match on.
# nextln: $()Enum::E((1u64 | 2u64 | 3u64, Struct { x: true | false, ..})) => 0,
# nextln: $()Enum::E((y, Struct { x: y | y | y, .. })) => 0,
# nextln: $()Variable "y" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "y".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match or4 {
# nextln: $()`or4`, of type "Enum", is the value to match on.
# nextln: $()Enum::E((1u64 | 2u64 | 3u64, Struct { x: true | false, ..})) => 0,
# nextln: $()Enum::E((y, Struct { x: y | y | y, .. })) => 0,
# nextln: $()Variable "y" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "y".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match or4 {
# nextln: $()`or4`, of type "Enum", is the value to match on.
# nextln: $()Enum::E((1u64 | 2u64 | 3u64, Struct { x: true | false, ..})) => 0,
# nextln: $()Enum::E((y, Struct { x: y | y | y, .. })) => 0,
# nextln: $()Variable "y" is already defined in this match arm.
# nextln: $()This is the first definition of the variable "y".

# check: $()Consider renaming either of the variables.

# check: $()Match pattern variable is already defined

# check: $()let _x = match or5 {
# nextln: $()`or5`, of type "(numeric, Struct, numeric)", is the value to match on.
# nextln: $()(x, Struct { x, .. } | Struct { x, .. }, y) => y,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".
# nextln: $()This is the first definition of the variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".

# check: $()Match pattern variable is already defined

# check: $()let _x = match or5 {
# nextln: $()`or5`, of type "(numeric, Struct, numeric)", is the value to match on.
# nextln: $()(x, Struct { x, .. } | Struct { x, .. }, y) => y,
# nextln: $()Variable "x" is already defined in this match arm.
# nextln: $()Struct field "x" is just a shorthand notation for `x: x`. It defines a variable "x".
# nextln: $()This is the first definition of the variable "x".

# check: $()Consider declaring a variable for the field "x" (e.g., `x: var_x`), or renaming the variable "x".