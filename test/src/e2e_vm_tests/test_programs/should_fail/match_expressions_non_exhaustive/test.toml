category = "fail"

# check: $()Match arm is unreachable
# nextln: primitive_tests.sw:

# check: $()Match arm is unreachable
# nextln: primitive_tests.sw:

# check: $()Match arm is unreachable
# nextln: adt_tests.sw:

# check: $()Match arm is unreachable
# nextln: adt_tests.sw:

# check: $()Match arm is unreachable
# nextln: adt_tests.sw:

# check: $()Match arm is unreachable
# nextln: adt_tests.sw:

# check: primitive_tests.sw:6:13
# check: $()Non-exhaustive match expression. Missing patterns `[1...4]`, `[6...9]`, `[11...MAX]`

# check: primitive_tests.sw:29:13
# check: $()Non-exhaustive match expression. Missing patterns `(_, [2...MAX])`

# check: primitive_tests.sw:58:16
# check: $()Variable "newvariable" does not exist in this scope.

# check: adt_tests.sw:14:15
# check: $()Non-exhaustive match expression. Missing patterns `Point { x: [MIN...2], ... }`, `Point { x: [4...MAX], ... }`

# check: adt_tests.sw:55:15
# check: $()Non-exhaustive match expression. Missing patterns `CrazyPoint { p1: Point { x: [1...MAX], ... }, ... }`

# check: complex_tests.sw:77:13
# check: $()Non-exhaustive match expression. Missing patterns `Result::Ok(MyIdentity::ContractId(_))`

# check: complex_tests.sw:92:13
# check: $()Non-exhaustive match expression. Missing patterns `Result::Ok(MyIdentity::Address(MyAddress { inner: 0 }))`, `Result::Ok(MyIdentity::Address(MyAddress { inner: [2...MAX] }))`

# check: complex_tests.sw:100:13
# check: $()Non-exhaustive match expression. Missing patterns `Result::Ok(MyIdentity::ContractId(_))`

# check: complex_tests.sw:107:13
# check: $()Non-exhaustive match expression. Missing patterns `Result::Ok(MyIdentity::Address(MyAddress { inner: 0 }))`, `Result::Ok(MyIdentity::Address(MyAddress { inner: [2...MAX] }))`

# check: complex_tests.sw:115:13
# check: $()Non-exhaustive match expression. Missing patterns `Result::Ok(MyIdentity::Address(MyAddress { inner: 0 }))`, `Result::Ok(MyIdentity::Address(MyAddress { inner: 2 }))`, `Result::Ok(MyIdentity::Address(MyAddress { inner: [4...MAX] }))`

# check: or_patterns.sw:14:5
# check: $()Non-exhaustive match expression. Missing patterns `[3...MAX]`

# check: or_patterns.sw:22:5
# check: $()Non-exhaustive match expression. Missing patterns `A { a: _, b: 0 }`, `A { a: _, b: [3...MAX] }`

# check: or_patterns.sw:28:5
# check: $()Non-exhaustive match expression. Missing patterns `_ | 0 | _ | [4...MAX] | 1 | 0 | 1 | [4...MAX] | _ | 0 | 1 | 0 | _ | [4...MAX] | 1 | [4...MAX]`, `A { a: _, b: 0 } | A { a: _, b: [4...MAX] } | A { a: 1, b: 0 } | A { a: 1, b: [4...MAX] } | A { a: _, b: 0 } | A { a: 1, b: 0 } | A { a: _, b: [4...MAX] } | A { a: 1, b: [4...MAX] }`, `[4...MAX]`, `_`, `1`, `0`, `[4...MAX]`, `[4...MAX]`, `[4...MAX]`

# check: or_patterns.sw:37:5
# check: $()Non-exhaustive match expression. Missing patterns `B { a: _, b: 0 }`, `B { a: _, b: [2...MAX] }`, `B { a: _, b: 0 }`, `B { a: _, b: [2...MAX] }`, `B { a: _, b: 0 }`, `B { a: _, b: 0 }`, `B { a: _, b: [2...MAX] }`, `B { a: _, b: [2...MAX] }`, `B { a: _, b: 0 }`, `B { a: _, b: [2...MAX] }`, `B { a: _, b: 0 }`, `B { a: _, b: 0 }`, `B { a: _, b: 0 }`, `B { a: _, b: [2...MAX] }`, `B { a: _, b: [2...MAX] }`, `B { a: _, b: [2...MAX] }`, `_`, `_`, `0`, `[2...MAX]`, `0`, `[2...MAX]`

# check: or_patterns.sw:48:5
# check: $()Non-exhaustive match expression. Missing patterns `A { a: _, b: _ } | 0 | A { a: _, b: _ } | [2...MAX] | _ | 0 | _ | [2...MAX] | A { a: _, b: _ } | 0 | _ | 0 | A { a: _, b: _ } | [2...MAX] | _ | [2...MAX]`, `B { a: A { a: _, b: _ }, b: 0 } | B { a: A { a: _, b: _ }, b: [2...MAX] } | B { a: _, b: 0 } | B { a: _, b: [2...MAX] } | B { a: A { a: _, b: _ }, b: 0 } | B { a: _, b: 0 } | B { a: A { a: _, b: _ }, b: [2...MAX] } | B { a: _, b: [2...MAX] }`, `0`, `[2...MAX]`, `A { a: _, b: _ }`, `_`, `0`, `[2...MAX]`, `0`, `[2...MAX]`, `0`, `[2...MAX]`
