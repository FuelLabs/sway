category = "fail"

# check: $()impl<E, F> Setter<E> for FooBarData<E> {
# check: $()The generic type parameter "F" is unconstrained.

# check: $()impl<I> OutOfScopeGetter<I> for FooBarData<I> {
# check: $()Could not find symbol "OutOfScopeGetter" in this scope.

# check: $()impl<I> OutOfScopeGetter<I> for FooBarData<I> {
# check: $()Trait "OutOfScopeGetter" cannot be found in the current scope.

# check: $()impl<J, K> Getter<J, K> for FooBarData<J> {
# check: $()Expected 1 type argument for "Getter", but instead found 2.

# check: $()impl<L> Getter for FooBarData<L> {
# check: $()"Getter" needs type arguments.

# check: $()Trait is already implemented for type
# check: $()impl<T> Multiple<u64> for FooBarData<T> {
# nextln: $()fn unused(self, x: u64, other: u64) -> u64 {
# check: $()}
# nextln: $()}
# nextln: $()This is the already existing implementation of "Multiple<u64>" for "FooBarData<F>".

# check: $()impl<F> Multiple<u64> for FooBarData<F> {
# nextln: $()fn unused(self, x: u64, other: u64) -> u64 {
# check: $()}
# nextln: $()}
# nextln: $()Trait "generic_traits::Multiple<u64>" is already implemented for type "FooBarData<F>".

# check: $()Self type of an impl block is not valid
# check: $()impl<T> Returner<T> for Self {
# nextln: $()"Self" is not a valid type in the self type of a trait impl block.

# check: $()Self type of an impl block is not valid
# check: $()impl<T> Returner<T> for _ {
# nextln: $()Placeholder `_` is not a valid type in the self type of a trait impl block.
# check: $()Are you trying to implement trait "Returner" for any type?
# check: $()impl SomeTrait for _

# check: $()my_trait_method() -> Self {
# check: $()1u64
# check: $()Mismatched types.
# check: $()expected: U
# check: $()found:    u64.
# check: $()help: Function body's return type does not match up with its return type annotation.

# check: $()my_trait_method(t: T) -> Self {
# check: $()t
# check: $()Mismatched types.
# check: $()expected: U
# check: $()found:    T.
# check: $()help: Function body's return type does not match up with its return type annotation.

# check: $()let b = a.set(42);
# check: $()No method named "set" found for type "FooBarData<u8>".
