category = "fail"

#check: $()error

#check: $()use lib::L_A;
#nextln: $()use lib::L_A;
#nextln: $()The imported symbol "L_A" shadows another symbol with the same name.

#check: $()const L_X = 1;
#nextln: $()Constant "L_X" was already defined in scope.

#check: $()const M_X = 2;
#nextln: $()const M_X = 3;
#nextln: $()Constant "M_X" was already defined in scope.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const M_Y = 4;
#nextln: $()Shadowed constant "M_Y" is declared here.

#check: $()const M_Y = 5;
#nextln: $()Constant "M_Y" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const M_Y = 5;
#nextln: $()Shadowed constant "M_Y" is declared here.

#check: $()const M_Y = 55;
#nextln: $()Constant "M_Y" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()use lib::L_Y;
#nextln: $()Shadowed constant "L_Y" gets imported here.

#check: $()const L_Y = 6;
#nextln: $()Constant "L_Y" shadows imported constant of the same name.

#check: $()pub const L_Y = 5;
#nextln: $()This is the original declaration of the imported constant "L_Y".

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const F_X = 7;
#nextln: $()Shadowed constant "F_X" is declared here.
#nextln: $()const F_X = 8;
#nextln: $()Constant "F_X" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const F_X = 8;
#nextln: $()Shadowed constant "F_X" is declared here.
#check: $()const F_X = 81;
#nextln: $()Constant "F_X" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const F_Y = 9;
#nextln: $()Shadowed constant "F_Y" is declared here.

#check: $()const F_Y = 10;
#nextln: $()Constant "F_Y" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const L_X = 1;
#nextln: $()Shadowed constant "L_X" is declared here.

#check: $()let L_X = 100;
#nextln: $()Variable "L_X" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()use lib::L_X;
#nextln: $()Shadowed constant "L_X" gets imported here.

#check: $()let L_X = 100;
#nextln: $()Variable "L_X" shadows imported constant of the same name.

#check: $()pub const L_X = 5;
#nextln: $()This is the original declaration of the imported constant "L_X".

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const F_Z = 11;
#nextln: $()Shadowed constant "F_Z" is declared here.
#nextln: $()let F_Z = 102;
#nextln: $()Variable "F_Z" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot shadow variables

#check: $()let F_A = 103;
#nextln: $()This is the shadowed variable "F_A".
#nextln: $()const F_A = 12;
#nextln: $()Constant "F_A" shadows variable of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const M_Y = 5;
#nextln: $()Shadowed constant "M_Y" is declared here.

#check: $()let M_Y = 106;
#nextln: $()Variable "M_Y" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const M_Z = 41;
#nextln: $()Shadowed constant "M_Z" is declared here.

#check: $()let M_Z = 107;
#nextln: $()Variable "M_Z" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot shadow variables

#check: $()let B = 108;
#nextln: $()This is the shadowed variable "B".

#check: $()const B = 13;
#nextln: $()Constant "B" shadows variable of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const F_K = 14;
#nextln: $()Shadowed constant "F_K" is declared here.

#check: $()let F_K = 109;
#nextln: $()Variable "F_K" shadows constant of the same name.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()use lib::L_Z;
#nextln: $()Shadowed constant "L_Z" gets imported here.

#check: $()let L_Z = 110;
#nextln: $()Variable "L_Z" shadows imported constant of the same name.

#check: $()pub const L_Z = 5;
#nextln: $()This is the original declaration of the imported constant "L_Z".

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()use lib::L_K;
#nextln: $()Shadowed constant "L_K" gets imported here.

#check: $()let L_K = 111;
#nextln: $()Variable "L_K" shadows imported constant of the same name.

#check: $()pub const L_K = 5;
#nextln: $()This is the original declaration of the imported constant "L_K".

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()use lib::L_M;
#nextln: $()Shadowed constant "L_M" gets imported here.

#check: $()const L_M = 15;
#nextln: $()Constant "L_M" shadows imported constant of the same name.

#check: $()pub const L_M = 5;
#nextln: $()This is the original declaration of the imported constant "L_M".

#check: $()const S_X = 201;
#nextln: $()Constant "S_X" was already defined in scope.

#check: $()const L_N = 202;
#check: $()Constant "L_N" was already defined in scope.

#check: $()const M_M = 203;
#check: $()Constant "M_M" was already defined in scope.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const S_Y = 204;
#nextln: $()Shadowed constant "S_Y" is declared here.

#check: $()const S_Y = 205;
#nextln: $()Constant "S_Y" shadows constant of the same name.

#check: $()const E_X = 301;
#nextln: $()Constant "E_X" was already defined in scope.

#check: $()const L_N = 302;
#check: $()Constant "L_N" was already defined in scope.

#check: $()const M_M = 303;
#check: $()Constant "M_M" was already defined in scope.

#check: $()error
#sameln: $()Constants cannot be shadowed

#check: $()const E_Y = 304;
#nextln: $()Shadowed constant "E_Y" is declared here.

#check: $()const E_Y = 305;
#nextln: $()Constant "E_Y" shadows constant of the same name.
