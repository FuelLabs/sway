// all
//
// regex: VAR=v\d+
// regex: MD=!\d+
// regex: LABEL=[[:alpha:]0-9_]+

contract {
    fn test<58d7eb51>() -> ptr b256, !1 {
        local {  } __anon_0

        entry():
        v0 = get_local ptr {  }, __anon_0
        v1 = call f(v0), !5
        ret ptr b256 v1
    }

    fn f(self !6: ptr {  }) -> ptr b256, !8 {
        entry(self: ptr {  }):
        v0 = get_storage_key, !9
        ret ptr b256 v0
    }
}

!0 = "get_storage_key.sw"
!1 = span !0 218 265
!2 = span !0 254 255
!3 = span !0 246 259
!4 = state_index 42
!5 = (!3 !4)
!6 = span !0 42 46
!7 = span !0 51 55
!8 = span !0 37 91
!9 = span !0 66 85

// check: fn test<58d7eb51>() -> ptr b256

// not: call
// check: $(stk_val=$VAR) = get_storage_key, $(stk_md=$MD)

// check: br $(ret_block=$LABEL)($stk_val)

// check: $ret_block($(ret_val=$VAR): ptr b256):
// check: ret ptr b256 $ret_val

// check: $(si_md=$MD) = state_index 42
// check: $stk_md = (
// sameln: $si_md
