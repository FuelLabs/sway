script {
    entry fn main() -> () {
        local b256 dada = const b256 0xdadadadadadadadadadadadadadadadadadadadadadadadadadadadadadadada

        entry():
        v0 = get_local ptr b256, dada
        v1 = load v0
        v2 = const u64 22
        v3 = call foo(v1, v2)
        v4 = const unit ()
        ret () v4
    }

    fn foo(x: b256, y: u64) -> () {
        entry(x: b256, y: u64):
        v0 = const u64 0
        log u64 y, v0
        v1 = const unit ()
        ret () v1
    }
}

// regex: ID=[[:alpha:]_0-9]+

// check: fn main
// check: local b256 $(tmp_arg=$ID)

// check: $(load_val=$ID) = load $ID
// check: $(get_loc_val=$ID) = get_local ptr b256, $tmp_arg
// check: store $load_val to $get_loc_val
// check: call foo($get_loc_val, $ID)
