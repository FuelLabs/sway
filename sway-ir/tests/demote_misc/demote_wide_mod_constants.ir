script {
    entry fn main() -> u256 {
        local u256 lhs
        local u256 rhs
        entry():
        v0 = get_local ptr u256, lhs
        v1 = load v0, !0
        v2 = get_local ptr u256, rhs
        v3 = load v2, !0
        v4 = mod v1, v3, !0
        ret u256 v4
    }
}

// regex: ID=[[:alpha:]0-9_]+

// check: local u256 __wide_lhs
// check: local mut u256 __wide_result
// check: local u256 __wide_rhs
// check: local u256 lhs
// check: local u256 rhs
// check: entry():
// check: v0 = get_local ptr u256, lhs
// check: v1 = load v0
// check: v2 = get_local ptr u256, rhs
// check: v3 = load v2
// check: v4 = get_local ptr u256, __wide_lhs
// check: store v1 to v4
// check: v5 = get_local ptr u256, __wide_zero
// check: v6 = get_local ptr u256, __wide_rhs
// check: store v3 to v6
// check: v7 = get_local ptr u256, __wide_result
// check: wide mod v4, v5, v6 to v7
// check: v8 = load v7
// check: ret u256 v8
